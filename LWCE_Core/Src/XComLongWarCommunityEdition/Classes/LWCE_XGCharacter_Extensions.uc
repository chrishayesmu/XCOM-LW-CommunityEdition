class LWCE_XGCharacter_Extensions extends Object
    abstract;

static function XComUnitPawn GetPawnArchetype(XGCharacter kSelf)
{
    local XComAlienPawn kAlienPawn;
    local XComUnitPawn kBaseArchetype, kCEArchetype;

    kBaseArchetype = `CONTENTMGR.GetPawnTemplate(kSelf.m_eType);
    kCEArchetype = `WORLDINFO.Spawn(kSelf.m_kUnitPawnClassToSpawn, none, 'XComSectoid', , , , true, kSelf.m_eTeam);

    kAlienPawn = XComAlienPawn(kCEArchetype);

    if (kAlienPawn != none)
    {
        kAlienPawn.Voice = XComAlienPawn(kBaseArchetype).Voice;
        kAlienPawn.m_bShouldWeaponExplodeOnDeath = XComAlienPawn(kBaseArchetype).m_bShouldWeaponExplodeOnDeath;
        kAlienPawn.m_bDeathExploded = XComAlienPawn(kBaseArchetype).m_bDeathExploded;
    }

    `LWCE_LOG("-------------------------------------------------------------------");
    `LWCE_LOG("LWCE_XGCharacter_Extensions: GetPawnArchetype: kSelf = " $ kSelf $ ", kSelf.m_eType = " $ kSelf.m_eType);

    `LWCE_LOG("");
    `LWCE_LOG("LWCE_XGCharacter_Extensions: GetPawnArchetype: kBaseArchetype = " $ kBaseArchetype);
    `LWCE_LOG("LWCE_XGCharacter_Extensions: GetPawnArchetype: kBaseArchetype.GetGameUnit() = " $ kBaseArchetype.GetGameUnit());
    `LWCE_LOG("LWCE_XGCharacter_Extensions: GetPawnArchetype: kBaseArchetype.Mesh = " $ kBaseArchetype.Mesh);
    `LWCE_LOG("LWCE_XGCharacter_Extensions: GetPawnArchetype: kBaseArchetype.Mesh.Animations = " $ kBaseArchetype.Mesh.Animations);
    `LWCE_LOG("LWCE_XGCharacter_Extensions: GetPawnArchetype: kBaseArchetype.MovementNode = " $ kBaseArchetype.MovementNode);
    `LWCE_LOG("LWCE_XGCharacter_Extensions: GetPawnArchetype: kBaseArchetype.DefaultUnitPawnAnimsets.Length = " $ kBaseArchetype.DefaultUnitPawnAnimsets.Length);

    `LWCE_LOG("");
    `LWCE_LOG("LWCE_XGCharacter_Extensions: BEFORE ASSIGNMENT");
    `LWCE_LOG("LWCE_XGCharacter_Extensions: GetPawnArchetype: kCEArchetype = " $ kCEArchetype);
    `LWCE_LOG("LWCE_XGCharacter_Extensions: GetPawnArchetype: kCEArchetype.GetGameUnit() = " $ kCEArchetype.GetGameUnit());
    `LWCE_LOG("LWCE_XGCharacter_Extensions: GetPawnArchetype: kCEArchetype.Mesh = " $ kCEArchetype.Mesh);
    `LWCE_LOG("LWCE_XGCharacter_Extensions: GetPawnArchetype: kCEArchetype.Mesh.Animations = " $ kCEArchetype.Mesh.Animations);
    `LWCE_LOG("LWCE_XGCharacter_Extensions: GetPawnArchetype: kCEArchetype.MovementNode = " $ kCEArchetype.MovementNode);
    `LWCE_LOG("LWCE_XGCharacter_Extensions: GetPawnArchetype: kCEArchetype.DefaultUnitPawnAnimsets.Length = " $ kCEArchetype.DefaultUnitPawnAnimsets.Length);

    kCEArchetype.LightEnvironment = kBaseArchetype.LightEnvironment;
    kCEArchetype.RangeIndicator = kBaseArchetype.RangeIndicator;
    kCEArchetype.MindMergeFX_Send = kBaseArchetype.MindMergeFX_Send;
    kCEArchetype.MindMergeFX_Receive = kBaseArchetype.MindMergeFX_Receive;
    kCEArchetype.MindFrayFX_Receive = kBaseArchetype.MindFrayFX_Receive;
    kCEArchetype.MindControlFX_Send = kBaseArchetype.MindControlFX_Send;
    kCEArchetype.MindControlFX_Receive = kBaseArchetype.MindControlFX_Receive;
    kCEArchetype.PsiPanicFX_Receive = kBaseArchetype.PsiPanicFX_Receive;
    kCEArchetype.PsiInspiredFX_Receive = kBaseArchetype.PsiInspiredFX_Receive;
    kCEArchetype.DisablingShot_Receive = kBaseArchetype.DisablingShot_Receive;
    kCEArchetype.StunShot_Receive = kBaseArchetype.StunShot_Receive;
    kCEArchetype.TracerBeamedFX = kBaseArchetype.TracerBeamedFX;
    kCEArchetype.PoisonedByChryssalidFX = kBaseArchetype.PoisonedByChryssalidFX;
    kCEArchetype.PoisonedByThinmanFX = kBaseArchetype.PoisonedByThinmanFX;
    kCEArchetype.ElectropulsedFX = kBaseArchetype.ElectropulsedFX;
    kCEArchetype.AOEHitMaterial = kBaseArchetype.AOEHitMaterial;
    kCEArchetype.IndoorInfo = kBaseArchetype.IndoorInfo;
    //kCEArchetype.NextPawn = kBaseArchetype.NextPawn;
    kCEArchetype.Mesh = kBaseArchetype.Mesh;
    kCEArchetype.CylinderComponent = kBaseArchetype.CylinderComponent;
    //kCEArchetype.Physics = kBaseArchetype.Physics;
    //kCEArchetype.bDirtyComponents = kBaseArchetype.bDirtyComponents;
    kCEArchetype.bNetDirty = kBaseArchetype.bNetDirty;
    //kCEArchetype.CollisionComponent = kBaseArchetype.CollisionComponent;
    kCEArchetype.RotationRate = kBaseArchetype.RotationRate;

	kCEArchetype.LocalCameraOffset = kBaseArchetype.LocalCameraOffset;
	kCEArchetype.CameraFocusDistance = kBaseArchetype.CameraFocusDistance;
	kCEArchetype.AimLimit = kBaseArchetype.AimLimit;
	kCEArchetype.AimSpeedFactor = kBaseArchetype.AimSpeedFactor;
	kCEArchetype.AimStopThreshold = kBaseArchetype.AimStopThreshold;
	kCEArchetype.AimSpeedMin = kBaseArchetype.AimSpeedMin;
	kCEArchetype.AimSpeedMax = kBaseArchetype.AimSpeedMax;
	kCEArchetype.AimAtTargetMissPercent = kBaseArchetype.AimAtTargetMissPercent;
	kCEArchetype.TurnSpeedMultiplier = kBaseArchetype.TurnSpeedMultiplier;
	kCEArchetype.m_kUpdateWhenNotRenderedStack = kBaseArchetype.m_kUpdateWhenNotRenderedStack;
	//kCEArchetype.m_kTacticalGame = kBaseArchetype.m_kTacticalGame;
	kCEArchetype.m_kReplicatedCharacterParams = kBaseArchetype.m_kReplicatedCharacterParams;
	kCEArchetype.m_kJetPackNode = kBaseArchetype.m_kJetPackNode;
	kCEArchetype.Footsteps = kBaseArchetype.Footsteps;
	//kCEArchetype.LightEnvironment = kBaseArchetype.LightEnvironment;
	//kCEArchetype.RangeIndicator = kBaseArchetype.RangeIndicator;
	kCEArchetype.CloseAndPersonalRing = kBaseArchetype.CloseAndPersonalRing;
	kCEArchetype.ArcThrowerRing = kBaseArchetype.ArcThrowerRing;
	kCEArchetype.CivilianRescueRing = kBaseArchetype.CivilianRescueRing;
	kCEArchetype.MedikitRing = kBaseArchetype.MedikitRing;
	kCEArchetype.KineticStrikeCard = kBaseArchetype.KineticStrikeCard;
	kCEArchetype.FlamethrowerCard = kBaseArchetype.FlamethrowerCard;
	kCEArchetype.DamageEffectContainer = kBaseArchetype.DamageEffectContainer;
	kCEArchetype.m_bInMatinee = kBaseArchetype.m_bInMatinee;
	kCEArchetype.m_bRemainInAnimControlForDeath = kBaseArchetype.m_bRemainInAnimControlForDeath;
	kCEArchetype.PlayNonFootstepSounds = kBaseArchetype.PlayNonFootstepSounds;
	kCEArchetype.bDoDyingActions = kBaseArchetype.bDoDyingActions;
	kCEArchetype.SmashEnvironmentOnDeath = kBaseArchetype.SmashEnvironmentOnDeath;
	//kCEArchetype.m_bPawnPerkContentInitialized = kBaseArchetype.m_bPawnPerkContentInitialized;
	kCEArchetype.m_bHasFullAnimWeightBones = kBaseArchetype.m_bHasFullAnimWeightBones;
	kCEArchetype.bIsFemale = kBaseArchetype.bIsFemale;
	kCEArchetype.bUseBoneSprings = kBaseArchetype.bUseBoneSprings;
	kCEArchetype.m_bInWater = kBaseArchetype.m_bInWater;
	kCEArchetype.m_bOnlyAllowAnimLeftHandIKNotify = kBaseArchetype.m_bOnlyAllowAnimLeftHandIKNotify;
	kCEArchetype.m_bDropWeaponOnDeath = kBaseArchetype.m_bDropWeaponOnDeath;
	kCEArchetype.m_bAnimOverrideZeroAimOffset = kBaseArchetype.m_bAnimOverrideZeroAimOffset;
	kCEArchetype.m_bTutorialCanDieInMatinee = kBaseArchetype.m_bTutorialCanDieInMatinee;
	kCEArchetype.bAllowPersistentFX = kBaseArchetype.bAllowPersistentFX;
	kCEArchetype.m_bWasIdleBeforeMatinee = kBaseArchetype.m_bWasIdleBeforeMatinee;
	kCEArchetype.m_kLookAtTarget = kBaseArchetype.m_kLookAtTarget;
	kCEArchetype.PhysicsPushScale = kBaseArchetype.PhysicsPushScale;
	//kCEArchetype.RagdollFlag = kBaseArchetype.RagdollFlag;
	kCEArchetype.RagdollBlendTime = kBaseArchetype.RagdollBlendTime;
	kCEArchetype.TempCollisionComponents = kBaseArchetype.TempCollisionComponents;
	kCEArchetype.RagdollFinishTimer = kBaseArchetype.RagdollFinishTimer;
	kCEArchetype.WaitingToBeDestroyedTimer = kBaseArchetype.WaitingToBeDestroyedTimer;
	kCEArchetype.DyingImpulse = kBaseArchetype.DyingImpulse;
	kCEArchetype.DyingHitInfo = kBaseArchetype.DyingHitInfo;
	//kCEArchetype.m_kLastPhysicsState = kBaseArchetype.m_kLastPhysicsState;
	kCEArchetype.DeathHandlerTemplate = kBaseArchetype.DeathHandlerTemplate;
	kCEArchetype.m_deathHandler = kBaseArchetype.m_deathHandler;
	kCEArchetype.m_vTeleportToLocation = kBaseArchetype.m_vTeleportToLocation;
//	kCEArchetype.arrMindMergeSend = kBaseArchetype.arrMindMergeSend;
	//kCEArchetype.MindMergeFX_Send = kBaseArchetype.MindMergeFX_Send;
	//kCEArchetype.MindMergeFX_Receive = kBaseArchetype.MindMergeFX_Receive;
	//kCEArchetype.PsiPanicFX_Receive = kBaseArchetype.PsiPanicFX_Receive;
	//kCEArchetype.MindFrayFX_Receive = kBaseArchetype.MindFrayFX_Receive;
	//kCEArchetype.MindControlFX_Send = kBaseArchetype.MindControlFX_Send;
	//kCEArchetype.MindControlFX_Receive = kBaseArchetype.MindControlFX_Receive;
	//kCEArchetype.PsiInspiredFX_Receive = kBaseArchetype.PsiInspiredFX_Receive;
	//kCEArchetype.DisablingShot_Receive = kBaseArchetype.DisablingShot_Receive;
	kCEArchetype.StunShot_ReceiveTemplate = kBaseArchetype.StunShot_ReceiveTemplate;
	//kCEArchetype.StunShot_Receive = kBaseArchetype.StunShot_Receive;
	//kCEArchetype.TracerBeamedFX = kBaseArchetype.TracerBeamedFX;
	kCEArchetype.TracerBeamedFXTemplate = kBaseArchetype.TracerBeamedFXTemplate;
	//kCEArchetype.PoisonedByChryssalidFX = kBaseArchetype.PoisonedByChryssalidFX;
	kCEArchetype.PoisonedByChryssalidFXTemplate = kBaseArchetype.PoisonedByChryssalidFXTemplate;
	//kCEArchetype.PoisonedByThinmanFX = kBaseArchetype.PoisonedByThinmanFX;
	kCEArchetype.PoisonedByThinmanFXTemplate = kBaseArchetype.PoisonedByThinmanFXTemplate;
	//kCEArchetype.ElectropulsedFX = kBaseArchetype.ElectropulsedFX;
	kCEArchetype.ElectropulsedFXTemplate = kBaseArchetype.ElectropulsedFXTemplate;
	kCEArchetype.GrappleLine = kBaseArchetype.GrappleLine;
	kCEArchetype.UITextures = kBaseArchetype.UITextures;
	kCEArchetype.fPhysicsMotorForce = kBaseArchetype.fPhysicsMotorForce;
	kCEArchetype.LastHeadBoneLocation = kBaseArchetype.LastHeadBoneLocation;
	kCEArchetype.m_fWaterWorldZ = kBaseArchetype.m_fWaterWorldZ;
	kCEArchetype.m_aInWaterParticleSystems = kBaseArchetype.m_aInWaterParticleSystems;
	kCEArchetype.m_kLastWaterVolume = kBaseArchetype.m_kLastWaterVolume;
	kCEArchetype.CloseRangeMissDistance = kBaseArchetype.CloseRangeMissDistance;
	kCEArchetype.NormalMissDistance = kBaseArchetype.NormalMissDistance;
	kCEArchetype.NormalMissAngleMultiplier = kBaseArchetype.NormalMissAngleMultiplier;
	kCEArchetype.CloseRangeMissAngleMultiplier = kBaseArchetype.CloseRangeMissAngleMultiplier;
	kCEArchetype.fHiddenTime = kBaseArchetype.fHiddenTime;
	kCEArchetype.bWeaponIsDown = kBaseArchetype.bWeaponIsDown;
	kCEArchetype.LastLocation_WeaponDownCheck = kBaseArchetype.LastLocation_WeaponDownCheck;
	kCEArchetype.LastRotation_WeaponDownCheck = kBaseArchetype.LastRotation_WeaponDownCheck;
	//kCEArchetype.WeaponStateNode = kBaseArchetype.WeaponStateNode;
	//kCEArchetype.OpenCloseStateNode = kBaseArchetype.OpenCloseStateNode;
	//kCEArchetype.FlyingLegMaskNode = kBaseArchetype.FlyingLegMaskNode;
	//kCEArchetype.MovementNode = kBaseArchetype.MovementNode;
	//kCEArchetype.TurnNode = kBaseArchetype.TurnNode;
	//kCEArchetype.CrouchNode = kBaseArchetype.CrouchNode;
	//kCEArchetype.ActionNode = kBaseArchetype.ActionNode;
	//kCEArchetype.MirrorNode = kBaseArchetype.MirrorNode;
	//kCEArchetype.IdleNode = kBaseArchetype.IdleNode;
	//kCEArchetype.CoverNodes = kBaseArchetype.CoverNodes;
	//kCEArchetype.WeaponDownNodes = kBaseArchetype.WeaponDownNodes;
	//kCEArchetype.SuppressedNodes = kBaseArchetype.SuppressedNodes;
	//kCEArchetype.SpineMaskNodes = kBaseArchetype.SpineMaskNodes;
	kCEArchetype.m_fTurnInitialTargetDirAngle = kBaseArchetype.m_fTurnInitialTargetDirAngle;
	kCEArchetype.m_bTurnFinished = kBaseArchetype.m_bTurnFinished;
	kCEArchetype.bSkipIK = kBaseArchetype.bSkipIK;
	kCEArchetype.bSelfFlankedSystemOK = kBaseArchetype.bSelfFlankedSystemOK;
	kCEArchetype.m_bLeftHandIKEnabled = kBaseArchetype.m_bLeftHandIKEnabled;
	kCEArchetype.m_bLeftHandIKAnimOverrideEnabled = kBaseArchetype.m_bLeftHandIKAnimOverrideEnabled;
	kCEArchetype.m_bLeftHandIKAnimOverrideOn = kBaseArchetype.m_bLeftHandIKAnimOverrideOn;
	kCEArchetype.bLatent_FinishAnimateSwitchCoverSides = kBaseArchetype.bLatent_FinishAnimateSwitchCoverSides;
	kCEArchetype.bUseObstructionShader = kBaseArchetype.bUseObstructionShader;
	kCEArchetype.bAllowFireFromSuppressIdle = kBaseArchetype.bAllowFireFromSuppressIdle;
	kCEArchetype.bAllowOnlyLowCoverAnims = kBaseArchetype.bAllowOnlyLowCoverAnims;
	kCEArchetype.bSkipRotateToward = kBaseArchetype.bSkipRotateToward;
	kCEArchetype.m_bUseRMA = kBaseArchetype.m_bUseRMA;
	kCEArchetype.m_bShouldTurnBeforeMoving = kBaseArchetype.m_bShouldTurnBeforeMoving;
	kCEArchetype.m_bAuxParametersDirty = kBaseArchetype.m_bAuxParametersDirty;
	kCEArchetype.m_bAuxParamNeedsPrimary = kBaseArchetype.m_bAuxParamNeedsPrimary;
	kCEArchetype.m_bAuxParamNeedsSecondary = kBaseArchetype.m_bAuxParamNeedsSecondary;
	kCEArchetype.m_bAuxParamUse3POutline = kBaseArchetype.m_bAuxParamUse3POutline;
	kCEArchetype.m_bAuxAlwaysVisible = kBaseArchetype.m_bAuxAlwaysVisible;
	kCEArchetype.m_bAuxParamNeedsAOEMaterial = kBaseArchetype.m_bAuxParamNeedsAOEMaterial;
	kCEArchetype.m_bNewNeedsAOEMaterial = kBaseArchetype.m_bNewNeedsAOEMaterial;
	kCEArchetype.m_bTexturesBoosted = kBaseArchetype.m_bTexturesBoosted;
	kCEArchetype.m_bWaitingToTurnIntoZombie = kBaseArchetype.m_bWaitingToTurnIntoZombie;
	kCEArchetype.m_fTurnLocInterpAmount = kBaseArchetype.m_fTurnLocInterpAmount;
	kCEArchetype.m_vTurnInitialLocation = kBaseArchetype.m_vTurnInitialLocation;
	kCEArchetype.m_iAimActiveChild = kBaseArchetype.m_iAimActiveChild;
	kCEArchetype.AimingNode = kBaseArchetype.AimingNode;
	kCEArchetype.AimOffset = kBaseArchetype.AimOffset;
	kCEArchetype.StandingAimToggle = kBaseArchetype.StandingAimToggle;
	kCEArchetype.StandingAimOffsetNode = kBaseArchetype.StandingAimOffsetNode;
	kCEArchetype.LowCoverAimOffsetNode = kBaseArchetype.LowCoverAimOffsetNode;
	kCEArchetype.HighCoverAimOffsetNode = kBaseArchetype.HighCoverAimOffsetNode;
	kCEArchetype.CrouchStateNode = kBaseArchetype.CrouchStateNode;
	kCEArchetype.m_ePreDiscHoverState = kBaseArchetype.m_ePreDiscHoverState;
	kCEArchetype.LatentSwitchSidesCoverState = kBaseArchetype.LatentSwitchSidesCoverState;
	kCEArchetype.m_eWeaponState = kBaseArchetype.m_eWeaponState;
	kCEArchetype.m_eLastSelectedExitCoverType = kBaseArchetype.m_eLastSelectedExitCoverType;
	kCEArchetype.m_eOpenCloseState = kBaseArchetype.m_eOpenCloseState;
	kCEArchetype.m_eTimeDilationState = kBaseArchetype.m_eTimeDilationState;
	kCEArchetype.m_eMoveItemToSlot = kBaseArchetype.m_eMoveItemToSlot;
	kCEArchetype.fFootIKTimeLeft = kBaseArchetype.fFootIKTimeLeft;
	kCEArchetype.FootIKInfos = kBaseArchetype.FootIKInfos;
	kCEArchetype.abColCylEnable = kBaseArchetype.abColCylEnable;
	kCEArchetype.LeftHandIK = kBaseArchetype.LeftHandIK;
	kCEArchetype.RightHandIK = kBaseArchetype.RightHandIK;
	kCEArchetype.FocalPoint = kBaseArchetype.FocalPoint;
	kCEArchetype.vMoveDirection = kBaseArchetype.vMoveDirection;
	kCEArchetype.vMoveDestination = kBaseArchetype.vMoveDestination;
	kCEArchetype.LatentTurnTarget = kBaseArchetype.LatentTurnTarget;
	kCEArchetype.fBaseZMeshTranslation = kBaseArchetype.fBaseZMeshTranslation;
	kCEArchetype.arrPawnPerkContent = kBaseArchetype.arrPawnPerkContent;
	kCEArchetype.m_vFireLoc = kBaseArchetype.m_vFireLoc;
	kCEArchetype.m_fTotalDistanceAlongPath = kBaseArchetype.m_fTotalDistanceAlongPath;
	kCEArchetype.m_fDistanceMovedAlongPath = kBaseArchetype.m_fDistanceMovedAlongPath;
	kCEArchetype.m_fDistanceToStopExactly = kBaseArchetype.m_fDistanceToStopExactly;
	kCEArchetype.m_iLastInterval_MoveReactionProcessing = kBaseArchetype.m_iLastInterval_MoveReactionProcessing;
	kCEArchetype.m_StairVolume = kBaseArchetype.m_StairVolume;
	//kCEArchetype.m_kGameUnit = kBaseArchetype.m_kGameUnit;
	kCEArchetype.DefaultUnitPawnAnimsets = kBaseArchetype.DefaultUnitPawnAnimsets;
	kCEArchetype.CustomFlightMovementRifleAnimsets = kBaseArchetype.CustomFlightMovementRifleAnimsets;
	kCEArchetype.CustomFlightMovementPistolAnimsets = kBaseArchetype.CustomFlightMovementPistolAnimsets;
	kCEArchetype.PathingRadius = kBaseArchetype.PathingRadius;
	kCEArchetype.CollisionHeight = kBaseArchetype.CollisionHeight;
	kCEArchetype.CollisionRadius = kBaseArchetype.CollisionRadius;
	kCEArchetype.ThrowGrenadeStartPosition = kBaseArchetype.ThrowGrenadeStartPosition;
	kCEArchetype.ThrowGrenadeStartPositionUnderhand = kBaseArchetype.ThrowGrenadeStartPositionUnderhand;
	kCEArchetype.fStopDistanceNoCover = kBaseArchetype.fStopDistanceNoCover;
	kCEArchetype.fStopDistanceCover = kBaseArchetype.fStopDistanceCover;
	kCEArchetype.m_kOpenCloseStateReplicationData = kBaseArchetype.m_kOpenCloseStateReplicationData;
	kCEArchetype.m_arrParticleEffects = kBaseArchetype.m_arrParticleEffects;
	kCEArchetype.m_WeaponSocketNameToUse = kBaseArchetype.m_WeaponSocketNameToUse;
	kCEArchetype.HiddenSlots = kBaseArchetype.HiddenSlots;
	kCEArchetype.TargetLoc = kBaseArchetype.TargetLoc;
	kCEArchetype.HeadBoneName = kBaseArchetype.HeadBoneName;
	kCEArchetype.FocusFireBlendTime = kBaseArchetype.FocusFireBlendTime;
	kCEArchetype.m_kAuxiliaryMaterial = kBaseArchetype.m_kAuxiliaryMaterial;
	kCEArchetype.m_kAuxiliaryMaterial_ZeroAlpha = kBaseArchetype.m_kAuxiliaryMaterial_ZeroAlpha;
	kCEArchetype.m_DefaultLightingChannels = kBaseArchetype.m_DefaultLightingChannels;
	kCEArchetype.m_kAOEMaterial = kBaseArchetype.m_kAOEMaterial;
	kCEArchetype.m_fPercent = kBaseArchetype.m_fPercent;
	kCEArchetype.m_fVisibilityPercentage = kBaseArchetype.m_fVisibilityPercentage;
	kCEArchetype.m_iTurnsTillVisibilityCheck = kBaseArchetype.m_iTurnsTillVisibilityCheck;
	kCEArchetype.Movement_Stop_Blend = kBaseArchetype.Movement_Stop_Blend;
	kCEArchetype.Into_Idle_Blend = kBaseArchetype.Into_Idle_Blend;
	kCEArchetype.Start_Turn_Blend = kBaseArchetype.Start_Turn_Blend;
	kCEArchetype.Start_Strangle_Blend = kBaseArchetype.Start_Strangle_Blend;
	kCEArchetype.Stop_Strangle_Blend = kBaseArchetype.Stop_Strangle_Blend;
	kCEArchetype.Kill_Strangle_Blend = kBaseArchetype.Kill_Strangle_Blend;
	//kCEArchetype.HumanGlowMaterial = kBaseArchetype.HumanGlowMaterial;
	//kCEArchetype.AlienGlowMaterial = kBaseArchetype.AlienGlowMaterial;
	//kCEArchetype.CivilianGlowMaterial = kBaseArchetype.CivilianGlowMaterial;
	//kCEArchetype.AOEHitMaterial = kBaseArchetype.AOEHitMaterial;
	kCEArchetype.m_kKitMesh = kBaseArchetype.m_kKitMesh;
	kCEArchetype.m_kHeadMeshComponent = kBaseArchetype.m_kHeadMeshComponent;
	kCEArchetype.HairComponent = kBaseArchetype.HairComponent;
	kCEArchetype.m_arrRemovePSCOnDeath = kBaseArchetype.m_arrRemovePSCOnDeath;
	kCEArchetype.m_kMoveItem = kBaseArchetype.m_kMoveItem;
	//kCEArchetype.NearbyFragileDestructibles = kBaseArchetype.NearbyFragileDestructibles;
	kCEArchetype.DamageEvent_CauseOfDeath = kBaseArchetype.DamageEvent_CauseOfDeath;
	//kCEArchetype.Mesh = `WORLDINFO.Spawn(kBaseArchetype.Mesh.Class, /* Owner */, /* SpawnTag */, kBaseArchetype.Mesh.Location, kBaseArchetype.Mesh.Rotation, kBaseArchetype.Mesh, /* bNoCollisionFail */ true);
	//kCEArchetype.VfTable_IXComCoverInterface = kBaseArchetype.VfTable_IXComCoverInterface;
	//kCEArchetype.VfTable_IIXComBuildingVisInterface = kBaseArchetype.VfTable_IIXComBuildingVisInterface;
	//kCEArchetype.IndoorInfo = kBaseArchetype.IndoorInfo;
	//kCEArchetype.m_kXGCharacter = kBaseArchetype.m_kXGCharacter;
	//kCEArchetype.bConsiderForCover = kBaseArchetype.bConsiderForCover;
	//kCEArchetype.bLastHitWasHeadShot = kBaseArchetype.bLastHitWasHeadShot;
	//kCEArchetype.bRespondToExplosions = kBaseArchetype.bRespondToExplosions;
	//kCEArchetype.VfTable_IInterface_Speaker = kBaseArchetype.VfTable_IInterface_Speaker;
	//kCEArchetype.MaxStepHeight = kBaseArchetype.MaxStepHeight;
	//kCEArchetype.MaxJumpHeight = kBaseArchetype.MaxJumpHeight;
	//kCEArchetype.WalkableFloorZ = kBaseArchetype.WalkableFloorZ;
	//kCEArchetype.LedgeCheckThreshold = kBaseArchetype.LedgeCheckThreshold;
	//kCEArchetype.PartialLedgeMoveDir = kBaseArchetype.PartialLedgeMoveDir;
	//kCEArchetype.Controller = kBaseArchetype.Controller;
	//kCEArchetype.NextPawn = kBaseArchetype.NextPawn;
    /*
	kCEArchetype.NetRelevancyTime = kBaseArchetype.NetRelevancyTime;
	kCEArchetype.LastRealViewer = kBaseArchetype.LastRealViewer;
	kCEArchetype.LastViewer = kBaseArchetype.LastViewer;
	kCEArchetype.bScriptTickSpecial = kBaseArchetype.bScriptTickSpecial;
	kCEArchetype.bUpAndOut = kBaseArchetype.bUpAndOut;
	kCEArchetype.bIsWalking = kBaseArchetype.bIsWalking;
	kCEArchetype.bWantsToCrouch = kBaseArchetype.bWantsToCrouch;
	//kCEArchetype.bIsCrouched = kBaseArchetype.bIsCrouched;
	//kCEArchetype.bTryToUncrouch = kBaseArchetype.bTryToUncrouch;
	kCEArchetype.bCanCrouch = kBaseArchetype.bCanCrouch;
	kCEArchetype.bCrawler = kBaseArchetype.bCrawler;
	//kCEArchetype.bReducedSpeed = kBaseArchetype.bReducedSpeed;
	kCEArchetype.bJumpCapable = kBaseArchetype.bJumpCapable;
	kCEArchetype.bCanJump = kBaseArchetype.bCanJump;
	kCEArchetype.bCanWalk = kBaseArchetype.bCanWalk;
	kCEArchetype.bCanSwim = kBaseArchetype.bCanSwim;
	kCEArchetype.bCanFly = kBaseArchetype.bCanFly;
	kCEArchetype.bCanClimbLadders = kBaseArchetype.bCanClimbLadders;
	kCEArchetype.bCanStrafe = kBaseArchetype.bCanStrafe;
	kCEArchetype.bAvoidLedges = kBaseArchetype.bAvoidLedges;
	kCEArchetype.bStopAtLedges = kBaseArchetype.bStopAtLedges;
	kCEArchetype.bAllowLedgeOverhang = kBaseArchetype.bAllowLedgeOverhang;
	//kCEArchetype.bPartiallyOverLedge = kBaseArchetype.bPartiallyOverLedge;
	//kCEArchetype.bSimulateGravity = kBaseArchetype.bSimulateGravity;
	kCEArchetype.bIgnoreForces = kBaseArchetype.bIgnoreForces;
	kCEArchetype.bCanWalkOffLedges = kBaseArchetype.bCanWalkOffLedges;
	kCEArchetype.bCanBeBaseForPawns = kBaseArchetype.bCanBeBaseForPawns;
	//kCEArchetype.bSimGravityDisabled = kBaseArchetype.bSimGravityDisabled;
	kCEArchetype.bDirectHitWall = kBaseArchetype.bDirectHitWall;
	//kCEArchetype.bPushesRigidBodies = kBaseArchetype.bPushesRigidBodies;
	kCEArchetype.bForceFloorCheck = kBaseArchetype.bForceFloorCheck;
	kCEArchetype.bForceKeepAnchor = kBaseArchetype.bForceKeepAnchor;
	kCEArchetype.bCanMantle = kBaseArchetype.bCanMantle;
	kCEArchetype.bCanClimbUp = kBaseArchetype.bCanClimbUp;
	kCEArchetype.bDisplayPathErrors = kBaseArchetype.bDisplayPathErrors;
	kCEArchetype.bCanPickupInventory = kBaseArchetype.bCanPickupInventory;
	kCEArchetype.bAmbientCreature = kBaseArchetype.bAmbientCreature;
	kCEArchetype.bLOSHearing = kBaseArchetype.bLOSHearing;
	kCEArchetype.bMuffledHearing = kBaseArchetype.bMuffledHearing;
	kCEArchetype.bDontPossess = kBaseArchetype.bDontPossess;
	kCEArchetype.bRollToDesired = kBaseArchetype.bRollToDesired;
	kCEArchetype.bStationary = kBaseArchetype.bStationary;
	kCEArchetype.bCachedRelevant = kBaseArchetype.bCachedRelevant;
	kCEArchetype.bNoWeaponFiring = kBaseArchetype.bNoWeaponFiring;
	kCEArchetype.bPrevBypassSimulatedClientPhysics = kBaseArchetype.bPrevBypassSimulatedClientPhysics;
	kCEArchetype.bRunPhysicsWithNoController = kBaseArchetype.bRunPhysicsWithNoController;
	kCEArchetype.bForceMaxAccel = kBaseArchetype.bForceMaxAccel;
	kCEArchetype.bLimitFallAccel = kBaseArchetype.bLimitFallAccel;
	kCEArchetype.bReplicateHealthToAll = kBaseArchetype.bReplicateHealthToAll;
	kCEArchetype.bForceRMVelocity = kBaseArchetype.bForceRMVelocity;
	kCEArchetype.bForceRegularVelocity = kBaseArchetype.bForceRegularVelocity;
	kCEArchetype.bPlayedDeath = kBaseArchetype.bPlayedDeath;
	//kCEArchetype.bDesiredRotationSet = kBaseArchetype.bDesiredRotationSet;
	//kCEArchetype.bLockDesiredRotation = kBaseArchetype.bLockDesiredRotation;
	//kCEArchetype.bUnlockWhenReached = kBaseArchetype.bUnlockWhenReached;
	kCEArchetype.bNeedsBaseTickedFirst = kBaseArchetype.bNeedsBaseTickedFirst;
	kCEArchetype.bUsedByMatinee = kBaseArchetype.bUsedByMatinee;
	kCEArchetype.bRootMotionFromInterpCurve = kBaseArchetype.bRootMotionFromInterpCurve;
	kCEArchetype.bDebugShowCameraLocation = kBaseArchetype.bDebugShowCameraLocation;
	kCEArchetype.bFastAttachedMove = kBaseArchetype.bFastAttachedMove;
	kCEArchetype.WalkingPhysics = kBaseArchetype.WalkingPhysics;
	//kCEArchetype.RemoteViewPitch = kBaseArchetype.RemoteViewPitch;
	kCEArchetype.FlashCount = kBaseArchetype.FlashCount;
	kCEArchetype.FiringMode = kBaseArchetype.FiringMode;
	//kCEArchetype.UncrouchTime = kBaseArchetype.UncrouchTime;
	kCEArchetype.CrouchHeight = kBaseArchetype.CrouchHeight;
	kCEArchetype.CrouchRadius = kBaseArchetype.CrouchRadius;
	//kCEArchetype.FullHeight = kBaseArchetype.FullHeight;
	kCEArchetype.DesiredSpeed = kBaseArchetype.DesiredSpeed;
	kCEArchetype.MaxDesiredSpeed = kBaseArchetype.MaxDesiredSpeed;
	kCEArchetype.HearingThreshold = kBaseArchetype.HearingThreshold;
	kCEArchetype.Alertness = kBaseArchetype.Alertness;
	kCEArchetype.SightRadius = kBaseArchetype.SightRadius;
	kCEArchetype.PeripheralVision = kBaseArchetype.PeripheralVision;
	//kCEArchetype.AvgPhysicsTime = kBaseArchetype.AvgPhysicsTime;
	kCEArchetype.Mass = kBaseArchetype.Mass;
	kCEArchetype.Buoyancy = kBaseArchetype.Buoyancy;
	kCEArchetype.MeleeRange = kBaseArchetype.MeleeRange;
	//kCEArchetype.Anchor = kBaseArchetype.Anchor;
	//kCEArchetype.AnchorItem = kBaseArchetype.AnchorItem;
	//kCEArchetype.LastAnchor = kBaseArchetype.LastAnchor;
	kCEArchetype.FindAnchorFailedTime = kBaseArchetype.FindAnchorFailedTime;
	kCEArchetype.LastValidAnchorTime = kBaseArchetype.LastValidAnchorTime;
	kCEArchetype.DestinationOffset = kBaseArchetype.DestinationOffset;
	kCEArchetype.NextPathRadius = kBaseArchetype.NextPathRadius;
	kCEArchetype.SpawnTime = kBaseArchetype.SpawnTime;
	kCEArchetype.MaxPitchLimit = kBaseArchetype.MaxPitchLimit;
	kCEArchetype.GroundSpeed = kBaseArchetype.GroundSpeed;
	kCEArchetype.WaterSpeed = kBaseArchetype.WaterSpeed;
	kCEArchetype.AirSpeed = kBaseArchetype.AirSpeed;
	kCEArchetype.LadderSpeed = kBaseArchetype.LadderSpeed;
	kCEArchetype.AccelRate = kBaseArchetype.AccelRate;
	kCEArchetype.JumpZ = kBaseArchetype.JumpZ;
	kCEArchetype.OutofWaterZ = kBaseArchetype.OutofWaterZ;
	kCEArchetype.MaxOutOfWaterStepHeight = kBaseArchetype.MaxOutOfWaterStepHeight;
	kCEArchetype.AirControl = kBaseArchetype.AirControl;
	kCEArchetype.WalkingPct = kBaseArchetype.WalkingPct;
	kCEArchetype.MovementSpeedModifier = kBaseArchetype.MovementSpeedModifier;
	kCEArchetype.CrouchedPct = kBaseArchetype.CrouchedPct;
	kCEArchetype.MaxFallSpeed = kBaseArchetype.MaxFallSpeed;
	kCEArchetype.AIMaxFallSpeedFactor = kBaseArchetype.AIMaxFallSpeedFactor;
	kCEArchetype.BaseEyeHeight = kBaseArchetype.BaseEyeHeight;
	kCEArchetype.EyeHeight = kBaseArchetype.EyeHeight;
	kCEArchetype.Floor = kBaseArchetype.Floor;
	kCEArchetype.SplashTime = kBaseArchetype.SplashTime;
	kCEArchetype.HeadVolume = kBaseArchetype.HeadVolume;
	kCEArchetype.Health = kBaseArchetype.Health;
	kCEArchetype.HealthMax = kBaseArchetype.HealthMax;
	kCEArchetype.BreathTime = kBaseArchetype.BreathTime;
	kCEArchetype.UnderWaterTime = kBaseArchetype.UnderWaterTime;
	kCEArchetype.LastPainTime = kBaseArchetype.LastPainTime;
	kCEArchetype.KismetDeathDelayTime = kBaseArchetype.KismetDeathDelayTime;
	kCEArchetype.RMVelocity = kBaseArchetype.RMVelocity;
	//kCEArchetype.noise1spot = kBaseArchetype.noise1spot;
	//kCEArchetype.noise1time = kBaseArchetype.noise1time;
	//kCEArchetype.noise1other = kBaseArchetype.noise1other;
	//kCEArchetype.noise1loudness = kBaseArchetype.noise1loudness;
	//kCEArchetype.noise2spot = kBaseArchetype.noise2spot;
	//kCEArchetype.noise2time = kBaseArchetype.noise2time;
	//kCEArchetype.noise2other = kBaseArchetype.noise2other;
	//kCEArchetype.noise2loudness = kBaseArchetype.noise2loudness;
	kCEArchetype.SoundDampening = kBaseArchetype.SoundDampening;
	kCEArchetype.DamageScaling = kBaseArchetype.DamageScaling;
	//kCEArchetype.MenuName = kBaseArchetype.MenuName;
	kCEArchetype.ControllerClass = kBaseArchetype.ControllerClass;
	kCEArchetype.PlayerReplicationInfo = kBaseArchetype.PlayerReplicationInfo;
	kCEArchetype.LandMovementState = kBaseArchetype.LandMovementState;
	kCEArchetype.WaterMovementState = kBaseArchetype.WaterMovementState;
	kCEArchetype.LastStartSpot = kBaseArchetype.LastStartSpot;
	kCEArchetype.LastStartTime = kBaseArchetype.LastStartTime;
	kCEArchetype.TakeHitLocation = kBaseArchetype.TakeHitLocation;
	kCEArchetype.HitDamageType = kBaseArchetype.HitDamageType;
	kCEArchetype.TearOffMomentum = kBaseArchetype.TearOffMomentum;
	//kCEArchetype.CylinderComponent = kBaseArchetype.CylinderComponent;
	kCEArchetype.RBPushRadius = kBaseArchetype.RBPushRadius;
	kCEArchetype.RBPushStrength = kBaseArchetype.RBPushStrength;
	kCEArchetype.AlwaysRelevantDistanceSquared = kBaseArchetype.AlwaysRelevantDistanceSquared;
	kCEArchetype.VehicleCheckRadius = kBaseArchetype.VehicleCheckRadius;
	kCEArchetype.LastHitBy = kBaseArchetype.LastHitBy;
	kCEArchetype.ViewPitchMin = kBaseArchetype.ViewPitchMin;
	kCEArchetype.ViewPitchMax = kBaseArchetype.ViewPitchMax;
	kCEArchetype.AllowedYawError = kBaseArchetype.AllowedYawError;
	//kCEArchetype.DesiredRotation = kBaseArchetype.DesiredRotation;
	kCEArchetype.InventoryManagerClass = kBaseArchetype.InventoryManagerClass;
	kCEArchetype.InvManager = kBaseArchetype.InvManager;
	kCEArchetype.Weapon = kBaseArchetype.Weapon;
	kCEArchetype.FlashLocation = kBaseArchetype.FlashLocation;
	kCEArchetype.LastFiringFlashLocation = kBaseArchetype.LastFiringFlashLocation;
	kCEArchetype.ShotCount = kBaseArchetype.ShotCount;
	kCEArchetype.PreRagdollCollisionComponent = kBaseArchetype.PreRagdollCollisionComponent;
	kCEArchetype.PhysicsPushBody = kBaseArchetype.PhysicsPushBody;
	kCEArchetype.FailedLandingCount = kBaseArchetype.FailedLandingCount;
	kCEArchetype.SlotNodes = kBaseArchetype.SlotNodes;
	kCEArchetype.InterpGroupList = kBaseArchetype.InterpGroupList;
	kCEArchetype.FacialAudioComp = kBaseArchetype.FacialAudioComp;
	kCEArchetype.MIC_PawnMat = kBaseArchetype.MIC_PawnMat;
	kCEArchetype.MIC_PawnHair = kBaseArchetype.MIC_PawnHair;
	kCEArchetype.ScalarParameterInterpArray = kBaseArchetype.ScalarParameterInterpArray;
	kCEArchetype.RootMotionInterpCurve = kBaseArchetype.RootMotionInterpCurve;
	kCEArchetype.RootMotionInterpRate = kBaseArchetype.RootMotionInterpRate;
	kCEArchetype.RootMotionInterpCurrentTime = kBaseArchetype.RootMotionInterpCurrentTime;
	kCEArchetype.RootMotionInterpCurveLastValue = kBaseArchetype.RootMotionInterpCurveLastValue;
 */
    `LWCE_LOG("");
    `LWCE_LOG("LWCE_XGCharacter_Extensions: AFTER ASSIGNMENT");
    `LWCE_LOG("LWCE_XGCharacter_Extensions: GetPawnArchetype: kCEArchetype = " $ kCEArchetype);
    `LWCE_LOG("LWCE_XGCharacter_Extensions: GetPawnArchetype: kCEArchetype.Mesh = " $ kCEArchetype.Mesh);
    `LWCE_LOG("LWCE_XGCharacter_Extensions: GetPawnArchetype: kCEArchetype.Mesh.Animations = " $ kCEArchetype.Mesh.Animations);

    //kCEArchetype.RestoreAnimSetsToDefault();
    //kCEArchetype.UpdateAnimations();
    //kCEArchetype.PostInitAnimTree(kCEArchetype.Mesh);

    `LWCE_LOG("");
    `LWCE_LOG("LWCE_XGCharacter_Extensions: AFTER METHOD CALLS");
    `LWCE_LOG("LWCE_XGCharacter_Extensions: GetPawnArchetype: kCEArchetype = " $ kCEArchetype);
    `LWCE_LOG("LWCE_XGCharacter_Extensions: GetPawnArchetype: kCEArchetype.Mesh = " $ kCEArchetype.Mesh);
    `LWCE_LOG("LWCE_XGCharacter_Extensions: GetPawnArchetype: kCEArchetype.Mesh.Animations = " $ kCEArchetype.Mesh.Animations);
    `LWCE_LOG("-------------------------------------------------------------------");

    `LWCE_LOG("LWCE_XGCharacter_Extensions: Dumping base archetype");
    `WORLDINFO.ConsoleCommand("obj dump " $ kBaseArchetype.Name);

    `LWCE_LOG("------------------------------------------------------------------------------");
    `LWCE_LOG("LWCE_XGCharacter_Extensions: Dumping LWCE archetype");
    `WORLDINFO.ConsoleCommand("obj dump " $ kCEArchetype.Name);


    return kCEArchetype;
}