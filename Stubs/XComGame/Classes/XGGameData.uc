class XGGameData extends Object
    native
    config(GameData);

enum EDifficultyLevel
{
    eDifficulty_Easy,
    eDifficulty_Normal,
    eDifficulty_Hard,
    eDifficulty_Classic,
    eDifficulty_MAX
};

enum EGameplayOption
{
    eGO_RandomDamage,
    eGO_RandomFunding,
    eGO_RandomRookieStats,
    eGO_RandomStatProgression,
    eGO_RandomPerks,
    eGO_RandomSeed,
    eGO_WoundsAffectStats,
    eGO_CritOnFlank,
    eGO_Liberation,
    eGO_DynamicWar,
    eGO_PanicAffectsFunding,
    eGO_CinematicMode,
    eGO_EscalatingSatelliteCosts,
    eGO_WearAndTear,
    eGO_ItchyTriggerTentacle,
    eGO_DecliningFunding,
    eGO_BronzeMan,
    eGO_LoseGearOnDeath,
    eGO_CommandersChoice,
    eGO_AimingAngles,
    eGO_MindHatesMatter,
    eGO_HiddenTrees,
    eGO_ItemDurability,
    eGO_NoExalt,
    eGO_FriendlySkies,
    eGO_AutoSquadSize,
    eGO_NoCostRepairs,
    eGO_FewerAliens,
    eGO_PerfectInfo,
    eGO_Recon,
    eGO_GreenFog,
    eGO_SecondWave_31,
    eGO_SecondWave_32,
    eGO_SecondWave_33,
    eGO_SecondWave_34,
    eGO_SecondWave_35,
    eGO_MAX
};

enum EFoundryTech
{
    eFoundry_None,
    eFoundry_SHIV,
    eFoundry_AlienGrenades,
    eFoundry_MedikitII,
    eFoundry_ArcThrowerII,
    eFoundry_VehicleRepair,
    eFoundry_AutomatedLasers,
    eFoundry_AutomatedPlasma,
    eFoundry_SHIV_Heal,
    eFoundry_CaptureDrone,
    eFoundry_AmmoConservation,
    eFoundry_AdvancedFlight,
    eFoundry_AdvancedConstruction,
    eFoundry_PistolI,
    eFoundry_PistolII,
    eFoundry_PistolIII,
    eFoundry_SHIVSuppression,
    eFoundry_StealthSatellites,
    eFoundry_Scope,
    eFoundry_EleriumFuel,
    eFoundry_MECCloseCombat,
    eFoundry_AdvancedServomotors,
    eFoundry_ShapedArmor,
    eFoundry_SentinelDrone,
    eFoundry_TacticalRigging,
    eMPMECSTT_MECSuitTemplate8,
    eMPT_MECTemplate1,
    eMPT_MECTemplate2,
    eMPT_MECTemplate3,
    eMPT_MECTemplate4,
    eMPT_MECTemplate5,
    eMPT_MECTemplate6,
    eMPT_MECTemplate7,
    eMPT_MECTemplate8,
    eMPMECSTT_MECSuitTemplate1,
    eMPMECSTT_MECSuitTemplate2,
    eMPMECSTT_MECSuitTemplate3,
    eMPMECSTT_MECSuitTemplate4,
    eMPMECSTT_MECSuitTemplate5,
    eMPMECSTT_MECSuitTemplate6,
    eMPMECSTT_MECSuitTemplate7,
    eMPMECSTT_MECSuitTemplate8_0,
    eMPMECSTT_MECSuitTemplate8_1,
    eMPMECSTT_MECSuitTemplate8_2,
    eMPMECSTT_MECSuitTemplate8_3,
    eMPMECSTT_MECSuitTemplate8_4,
    eFoundry_MAX
};

enum EResearchCredits
{
    eResearchCredit_None,
    eResearchCredit_Weapons_I,
    eResearchCredit_PlasmaWeapons,
    eResearchCredit_AllWeapons,
    eResearchCredit_Armor_I,
    eResearchCredit_AllArmor,
    eResearchCredit_UFOTech,
    eResearchCredit_Flight,
    eResearchCredit_Psionics,
    eResearchCredit_AllTech,
    eResearchCredit_MAX
};

enum EOTSTech
{
    eOTS_None,
    eOTS_SquadSize_I,
    eOTS_SquadSize_II,
    eOTS_Lieutenant,
    eOTS_Captain,
    eOTS_Major,
    eOTS_Colonel,
    eOTS_Commander,
    eOTS_MAX
};

enum EGeneModTech
{
    eGeneMod_None,
    eGeneMod_SecondaryHeart,
    eGeneMod_AdrenalNeurosympathy,
    eGeneMod_NeuralDamping,
    eGeneMod_NeuralFeedback,
    eGeneMod_HyperReactivePupils,
    eGeneMod_DepthPerception,
    eGeneMod_BioelectricSkin,
    eGeneMod_MimeticSkin,
    eGeneMod_MuscleFiberDensity,
    eGeneMod_AdaptiveBoneMarrow,
    eGeneMod_MAX
};

enum ETechType
{
    eTech_None,
    eTech_Xenobiology,
    eTech_ArcThrower,
    eTech_BaseShard,
    eTech_PsiLabs,
    eTech_Firestorm,
    eTech_AutopsySectoidCommander,
    eTech_Hyperwave,
    eTech_PsiLink,
    eTech_WeaponFragments,
    eTech_AlienMaterials,
    eTech_Exp_Warfare,
    eTech_Elerium,
    eTech_Meld,
    eTech_PsiArmor,
    eTech_Armor_Carapace,
    eTech_Armor_Skeleton,
    eTech_Armor_Titan,
    eTech_Armor_Ghost,
    eTech_Armor_ArchAngel,
    eTech_LaserWeapons,
    eTech_PrecisionLasers,
    eTech_HeavyLasers,
    eTech_Plasma_Pistol,
    eTech_Plasma_Light,
    eTech_Plasma_Rifle,
    eTech_Plasma_Heavy,
    eTech_Plasma_Sniper,
    eTech_Alloy_Cannon,
    eTech_Plasma_Cannon,
    eTech_Fusion_Launcher,
    eTech_BlasterLauncher,
    eTech_AlienNavigation,
    eTech_UFOPowerSource,
    eTech_EMP,
    eTech_InterrogateSectoid,
    eTech_InterrogateFloater,
    eTech_InterrogateMuton,
    eTech_InterrogateSectoidCommander,
    eTech_InterrogateBerserker,
    eTech_InterrogateThinMan,
    eTech_InterrogateHeavyFloater,
    eTech_InterrogateMutonElite,
    eTech_InterrogateEthereal,
    eTech_AutopsySectoid,
    eTech_AutopsyFloater,
    eTech_AutopsyThinMan,
    eTech_AutopsyMuton,
    eTech_AutopsyCryssalid,
    eTech_AutopsyZombie,
    eTech_AutopsyCyberdisc,
    eTech_AutopsyBerserker,
    eTech_AutopsyHeavyFloater,
    eTech_AutopsyMutonElite,
    eTech_AutopsyDrone,
    eTech_AutopsySectopod,
    eTech_AutopsyEthereal,
    eTech_AutopsyMechtoid,
    eTech_AutopsySeeker,
    eTech_Autopsy_END,
    eTech_Placeholder,
    eTech_Placeholder_1,
    eTech_Placeholder_2,
    eTech_Placeholder_3,
    eTech_Placeholder_4,
    eTech_Placeholder_5,
    eTech_Placeholder_6,
    eTech_Placeholder_7,
    eTech_Placeholder_8,
    eTech_Placeholder_9,
    eTech_Placeholder_10,
    eTech_Placeholder_11,
    eTech_Placeholder_12,
    eTech_Placeholder_13,
    eTech_Placeholder_14,
    eTech_Placeholder_15,
    eTech_MAX
};

enum ERecapStats
{
    eRecap_None,
    eRecap_Days,
    eRecap_Score,
    eRecap_AvgShotPctCount,
    eRecap_AvgShotPctSum,
    eRecap_AvgDmgCount,
    eRecap_AvgDmgSum,
    eRecap_AvgNumTurnsCount,
    eRecap_AvgNumTurnsSum,
    eRecap_Missions,
    eRecap_MissionsWon,
    eRecap_MissionsLost,
    eRecap_SoldiersLost,
    eRecap_SoldiersHired,
    eRecap_OTSTechs,
    eRecap_FirstColonel,
    eRecap_FavoriteClass,
    eRecap_DaysInInfirmary,
    eRecap_PsiSoldiers,
    eRecap_FundingCountries,
    eRecap_CountriesLost,
    eRecap_ContinentBonuses,
    eRecap_ContinentsCovered,
    eRecap_SatellitesLaunched,
    eRecap_SatellitesLost,
    eRecap_SecondSatellite,
    eRecap_ThirdSatellite,
    eRecap_FirstContinent,
    eRecap_FundingReceived,
    eRecap_GreyMarketFunding,
    eRecap_FCFunding,
    eRecap_ScientistsCollected,
    eRecap_EngineersCollected,
    eRecap_SoldiersCollected,
    eRecap_UFOsShotDown,
    eRecap_InterceptorsLost,
    eRecap_InterceptorsHired,
    eRecap_FirestormsBuilt,
    eRecap_EngagementsAborted,
    eRecap_AimConsumablesUsed,
    eRecap_DodgeConsumablesUsed,
    eRecap_TrackConsumablesUsed,
    eRecap_MoneyEarned,
    eRecap_MoneySpent,
    eRecap_AlloysRecovered,
    eRecap_EleriumRecovered,
    eRecap_AlloysUsed,
    eRecap_EleriumUsed,
    eRecap_Scientists,
    eRecap_LabsBuilt,
    eRecap_TechsResearched,
    eRecap_AvgTechDaysCount,
    eRecap_AvgTechDaysSum,
    eRecap_DifferentAliensCaptured,
    eRecap_Engineers,
    eRecap_WorkshopsBuilt,
    eRecap_ItemsBuilt,
    eRecap_SHIVsBuilt,
    eRecap_FoundryTechs,
    eRecap_MedikitsBuilt,
    eRecap_ArcThrowersBuilt,
    eRecap_FacilitiesBuilt,
    eRecap_FacilitiesRemoved,
    eRecap_MaxPower,
    eRecap_MaxAdjacencies,
    eRecap_ObjInterrogateAlien,
    eRecap_ObjResearchOutsiderShards,
    eRecap_ObjCollectShards,
    eRecap_ObjAssaultBase,
    eRecap_ObjBuildHyperwave,
    eRecap_ObjRecoverPsiLink,
    eRecap_ObjBuildGollop,
    eRecap_ObjChooseVolunteer,
    eRecap_FirstPsi,
    eRecap_FirstAlienWeapon,
    eRecap_FirstFirestorm,
    eRecap_FirstCarapace,
    eRecap_FirstLaser,
    eRecap_FirstTitan,
    eRecap_FirstBlaster,
    eRecap_FirstSkeleton,
    eRecap_FirstPsiArmor,
    eRecap_FirstGhost,
    eRecap_FirstIntLaser,
    eRecap_FirstIntPlasma,
    eRecap_FirstIntEMP,
    eRecap_FirstIntFusion,
    eRecap_DaysSurvived,
    eRecap_FirstMissionLost,
    eRecap_FirstMissionLostDays,
    eRecap_FirstFiveSoldierMission,
    eRecap_FirstSixSoldierMission,
    eRecap_SoldierNamesCustomized,
    eRecap_SoldierLooksCustomized,
    eRecap_MaxSoldiers,
    eRecap_MaxLeveledSoldiers,
    eRecap_StartingContinent,
    eRecap_OneShotKills,
    eRecap_AIOneShotKills,
    eRecap_AliensKilled,
    eRecap_AliensKilledFromExplosives,
    eRecap_ContinentsWon,
    eRecap_FirestormLaunch,
    eRecap_InterceptorLaunch,
    eRecap_GamesSubmitted,
    eRecap_IronmanGames,
    eRecap_TutorialGames,
    eRecap_SnipersOnMissions,
    eRecap_AssaultsOnMissions,
    eRecap_HeaviesOnMissions,
    eRecap_SupportsOnMissions,
    eRecap_UplinksBuilt,
    eRecap_NexiiBuilt,
    eRecap_ThermoBuilt,
    eRecap_EleriumPowerBuilt,
    eRecap_GeneratorBuilt,
    eRecap_NorthAmericaStarts,
    eRecap_SouthAmericaStarts,
    eRecap_AfricaStarts,
    eRecap_EuropeStarts,
    eRecap_AsiaStarts,
    eRecap_NorthAmericaBonuses,
    eRecap_SouthAmericaBonuses,
    eRecap_AfricaBonuses,
    eRecap_EuropeBonuses,
    eRecap_AsiaBonuses,
    eRecap_MAX
};

enum EProfileStats
{
    eProfile_NewGameCount,
    eProfile_TutorialComplete,
    eProfile_HighestDifficultyPlayed,
    eProfile_PreferredVolume,
    eProfile_WonGameFronNorthAmerica,
    eProfile_FLContinentsWonFrom,
    eProfile_AliensKilled,
    eProfile_AliensKilledFromExplosions,
    eProfile_GamesCompleted,
    eProfile_EasyGamesCompleted,
    eProfile_NormalGamesCompleted,
    eProfile_HardGamesCompleted,
    eProfile_ClassicGamesCompleted,
    eProfile_UFOsShotDown,
    eProfile_MeldTutorialComplete,
    eProfile_ProgenyComplete,
    eProfile_SlingshotComplete,
    eProfile_MAX
};

enum EPlayerEndTurnType
{
    ePlayerEndTurnType_TurnNotOver,
    ePlayerEndTurnType_PlayerInput,
    ePlayerEndTurnType_TimerExpired,
    ePlayerEndTurnType_AllUnitsDone,
    ePlayerEndTurnType_AI,
    ePlayerEndTurnType_MAX
};

enum ENumPlayers
{
    ENumPlayers,
    ENumPlayers_1,
    ENumPlayers_2,
    ENumPlayers_3,
    ENumPlayers_MAX
};

enum ETerrainTypes
{
    eTerrain_Rock,
    eTerrain_RockSteam,
    eTerrain_Open,
    eTerrain_Excavated,
    eTerrain_ExcavatedSteam,
    eTerrain_Facility,
    eTerrain_ExcavatedAccessLift,
    eTerrain_MAX
};

enum EFacilityType
{
    eFacility_None,
    eFacility_Hangar,
    eFacility_MissionControl,
    eFacility_Barracks,
    eFacility_Research,
    eFacility_Engineering,
    eFacility_AccessLift,
    eFacility_ScienceLab,
    eFacility_Workshop,
    eFacility_SmallRadar,
    eFacility_Power,
    eFacility_Foundry,
    eFacility_OTS,
    eFacility_AlienContain,
    eFacility_LargeRadar,
    eFacility_ThermalPower,
    eFacility_EleriumGenerator,
    eFacility_PsiLabs,
    eFacility_HyperwaveRadar,
    eFacility_DeusEx,
    eFacility_GreyMarket,
    eFacility_SitRoom,
    eFacility_CyberneticsLab,
    eFacility_GeneticsLab,
    eFacility_MAX
};

enum EShipType
{
    eShip_None,
    eShip_Interceptor,
    eShip_Skyranger,
    eShip_Firestorm,
    eShip_UFOSmallScout,
    eShip_UFOLargeScout,
    eShip_UFOAbductor,
    eShip_UFOSupply,
    eShip_UFOBattle,
    eShip_UFOEthereal,
    eShip_Fighter,
    eShip_Raider,
    eShip_Harvester,
    eShip_TerrorShip,
    eShip_AssaultCarrier,
    eShip_MAX
};

enum EMissionType
{
    eMission_None,
    eMission_SP_START,
    eMission_Abduction,
    eMission_Crash,
    eMission_LandedUFO,
    eMission_CovertOpsExtraction,
    eMission_CaptureAndHold,
    eMission_HQAssault,
    eMission_AlienBase,
    eMission_TerrorSite,
    eMission_Final,
    eMission_Special,
    eMission_DLC,
    eMission_ExaltRaid,
    eMission_SP_END,
    eMission_MP_START,
    eMission_MPDeathmatch,
    eMission_MPControl,
    eMission_MP_END,
    eMission_Strategy,
    eMission_ReturnToBase,
    eMission_All,
    eMission_MAX
};

enum EFCMissionType
{
    eFCMType_None,
    eFCMType_Assault,
    eFCMType_Bomb,
    eFCMType_Extraction,
    eFCMType_Rescue,
    eFCMType_Campaign,
    eFCMType_MAX
};

enum EFCMission
{
    eFCM_None,
    eFCM_HeliAssault,
    eFCM_PierAssault,
    eFCM_TruckStopAssault,
    eFCM_IndustrialAssault,
    eFCM_CemeteryAssault,
    eFCM_ResearchAssault,
    eFCM_TrainStationBomb,
    eFCM_SlaughterBomb,
    eFCM_TrainyardBomb,
    eFCM_BridgeBomb,
    eFCM_CommercialExtraction,
    eFCM_PierExtraction,
    eFCM_MuseumRescue,
    eFCM_HighwayRescue,
    eFCM_BoulevardRescue,
    eFCM_ResearchRescue,
    eFCM_CemeteryBomb,
    eFCM_BaseGameMAX,
    eFCM_SLINGSHOT_START,
    eFCM_Slingshot_LowFriends,
    eFCM_Slingshot_ConfoundingLight,
    eFCM_Slingshot_Gangplank,
    eFCM_SLINGSHOT_END,
    eFCM_PROGENY_START,
    eFCM_Progeny_Portent,
    eFCM_Progeny_Deluge,
    eFCM_Progeny_Furies,
    eFCM_PROGENY_END,
    eFCM_ChryssalidHive,
    eFCM_MeldTutorial,
    eFCM_XPACK_MAX,
    eFCM_MAX
};

enum EMissionTime
{
    eMissionTime_None,
    eMissionTime_Night,
    eMissionTime_Day,
    eMissionTime_DuskDawn,
    eMissionTime_MAX
};

enum EMissionRegion
{
    eMissionRegion_None,
    eMissionRegion_Any,
    eMissionRegion_NorthAmerica,
    eMissionRegion_Europe,
    eMissionRegion_Asia,
    eMissionRegion_SouthHemi,
    eMissionRegion_MAX
};

enum EItemType
{
    eItem_NONE,
    eItem_ScatterBlaster,
    eItem_Pistol,
    eItem_GaussRifle,
    eItem_Shotgun,
    eItem_GaussAutorifl,
    eItem_AntiMaterielLongRifle,
    eItem_RecoillessRifle,
    eItem_LaserPistol,
    eItem_PulseRifle,
    eItem_ScatterLaser,
    eItem_PulseBlaster,
    eItem_PulseSniperRifle,
    eItem_PlasmaPistol,
    eItem_PlasmaCarbine,
    eItem_PlasmaRifle,
    eItem_AlloyCannon,
    eItem_PlasmaNovagun,
    eItem_PlasmaSniper,
    eItem_BlasterLauncher,
    eItem_MechtoidPlasmaCannon,
    eItem_SeekerPlasmaPistol,
    eItem_MecKineticArm,
    eItem_MecFlameThrower,
    eItem_MecGrenadeLauncher,
    eItem_MecRestorativeMist,
    eItem_MecElectroPulse,
    eItem_MecProximityMineLauncher,
    eItem_MecMinigun,
    eItem_MecLaserLance,
    eItem_MecParticleBeam,
    eItem_AlloyJacketedRounds,
    eItem_AssaultCarbine,
    eItem_SectopodCannon,
    eItem_MarksmanScope,
    eItem_ChryssalidClaw,
    eItem_DroneBeam,
    eItem_PsiAmp,
    eItem_Grapple,
    eItem_CyberdiscWeapon,
    eItem_EnhancedBeamOptics,
    eItem_SectoidPlasmaPistol,
    eItem_PlasmaLightRifle_ThinMan,
    eItem_PlasmaLightRifle_Floater,
    eItem_PlasmaLightRifle_Muton,
    eItem_PlasmaAssaultRifle_Muton,
    eItem_HeavyPlasma_Floater,
    eItem_HeavyPlasma_Muton,
    eItem_PlasmaStellerator,
    eItem_ZombieFist,
    eItem_ElderWeapon,
    eItem_MutonBlade,
    eItem_OutsiderWeapon,
    eItem_GaussCarbine,
    eItem_Plague,
    eItem_SectopodClusterBomb,
    eItem_SeekerTentacles,
    eItem_TacVest,
    eItem_ArmorBanshee,
    eItem_TacArmor,
    eItem_ArmorCarapace,
    eItem_ArmorCorsair,
    eItem_ArmorTitan,
    eItem_ArmorArchangel,
    eItem_ArmorGhost,
    eItem_ArmorPsi,
    eItem_ArmorCovertOps,
    eItem_ArmorSeraph,
    eItem_ArmorAurora,
    eItem_Medikit,
    eItem_CombatStims,
    eItem_MindShield,
    eItem_ChitinPlating,
    eItem_ArcThrower,
    eItem_SCOPE,
    eItem_AlloyPlating,
    eItem_RespiratorImplant,
    eItem_Rocket,
    eItem_ReaperPack,
    eItem_LaserSight,
    eItem_HiCapMags,
    eItem_FragGrenade,
    eItem_SmokeGrenade,
    eItem_FlashBang,
    eItem_AlienGrenade,
    eItem_GhostGrenade,
    eItem_ChemGrenade,
    eItem_NeedleGrenade,
    eItem_MimicBeacon,
    eItem_ShredderRocket,
    eItem_BattleComputer,
    eItem_FloaterGrenade,
    eItem_MutonGrenade,
    eItem_CyberdiscGrenade,
    eItem_ChameleonSuit,
    eItem_CeramicPlates,
    eItem_PsiGrenade,
    eItem_BattleScanner,
    eItem_AlienTrophy,
    eItem_ReflexCannon,
    eItem_SHIV,
    eItem_SHIV_Alloy,
    eItem_SHIV_Hover,
    eItem_Interceptor,
    eItem_Firestorm,
    eItem_Skyranger,
    eItem_Satellite,
    eItem_HEATAmmo,
    eItem_HoloTargeter,
    eItem_ShivAutocannon,
    eItem_ShivSentry,
    eItem_SuperheavyPulser,
    eItem_ShivPlasma,
    eItem_SHIVDeck_I,
    eItem_SHIVDeck_II,
    eItem_SHIVDeck_III,
    eItem_StingrayMissiles,
    eItem_PhoenixCannon,
    eItem_AvalancheMissiles,
    eItem_LaserCannon,
    eItem_PlasmaCannon,
    eItem_EMPCannon,
    eItem_FusionCannon,
    eItem_DrumMags,
    eItem_SmartshellPods,
    eItem_IntConsumable_Dodge,
    eItem_IntConsumable_Boost,
    eItem_IntConsumable_Hit,
    eItem_WeaponSupercoolers,
    eItem_Thumper,
    eItem_AutoSentryTurret,
    eItem_AdaptiveTrackingPods,
    eItem_CoreArmoring,
    eItem_DamageControlPod,
    eItem_SectoidCorpse,
    eItem_SectoidCommanderCorpse,
    eItem_FloaterCorpse,
    eItem_FloaterHeavyCorpse,
    eItem_ThinManCorpse,
    eItem_MutonCorpse,
    eItem_MutonEliteCorpse,
    eItem_BerserkerCorpse,
    eItem_CyberdiscCorpse,
    eItem_EtherealCorpse,
    eItem_CryssalidCorpse,
    eItem_MecArmor3,
    eItem_SectopodCorpse,
    eItem_DroneCorpse,
    eItem_MecArmor5,
    eItem_SuperHeavyLaser,
    eItem_SectoidCaptive,
    eItem_SectoidCommanderCaptive,
    eItem_FloaterCaptive,
    eItem_FloaterHeavyCaptive,
    eItem_ThinManCaptive,
    eItem_MutonCaptive,
    eItem_MutonEliteCaptive,
    eItem_BerserkerCaptive,
    eItem_EtherealCaptive,
    eItem_ArmorPhalanx,
    eItem_ArmorAegis,
    eItem_Elerium115,
    eItem_AlienAlloys,
    eItem_WeaponFragment,
    eItem_Meld,
    eItem_AlienEntertainment,
    eItem_AlienFood,
    eItem_AlienStasisTank,
    eItem_UFONavigation,
    eItem_AlienSurgery,
    eItem_UFOPowerSource,
    eItem_HyperwaveBeacon,
    eItem_DamagedAlienEntertainment,
    eItem_DamagedAlienFood,
    eItem_DamagedAlienStasisTank,
    eItem_DamagedUFONavigation,
    eItem_DamagedAlienSurgery,
    eItem_DamagedUFOPowerSource,
    eItem_FuelCell,
    eItem_UFOFusionLauncher,
    eItem_PsiLink,
    eItem_ExaltIntel,
    eItem_ArmorKestrel,
    eItem_Base_Shard,
    eItem_Skeleton_Key,
    eItem_SectopodChestCannon,
    eItem_MecRailgun,
    eItem_MechtoidCore,
    eItem_SeekerCorpse,
    eItem_AlloyCarbidePlating,
    eItem_MecPulseLance,
    eItem_MecArmor6,
    eItem_MecCivvies,
    eItem_MecArmor1,
    eItem_MecArmor2,
    eItem_MecArmor4,
    eItem_AlloyBipod,
    eItem_BreachingAmmo,
    eItem_ArmorPiercingAmmo,
    eItem_AdvancedSuppressionModule,
    eItem_ImpactVest,
    eItem_TacticalSensors,
    eItem_WalkerServos,
    eItem_NeuralGunlink,
    eItem_ShredderAmmo,
    eItem_PsiScreen,
    eItem_RebuildSHIV,
    eItem_RebuildAlloySHIV,
    eItem_RebuildHoverSHIV,
    eItem_IlluminatorGunsight,
    eItem_MecArmor7,
    eItem_IncineratorModule,
    eItem_AssaultRifle,
    eItem_LaserSniperRifle,
    eItem_SAW,
    eItem_LaserRifle,
    eItem_SniperRifle,
    eItem_AutoLaser,
    eItem_RocketLauncher,
    eItem_TargetinModule,
    eItem_ReinforcedArmor,
    eItem_EleriumTurbos,
    eItem_MotionTracker,
    eItem_CognitiveEnhancer,
    eItem_Neuroregulator,
    eItem_FlakAmmo,
    eItem_MarksmanRifle,
    eItem_LaserStrikeRifle,
    eItem_AntiMaterielRifle,
    eItem_BlasterRifle,
    eItem_ReflexRifle,
    eItem_SMG,
    eItem_LaserShaterray,
    eItem_GaussStuttergun,
    eItem_PullseStengun,
    eItem_PlasmaStormgun,
    eItem_MachinePistol,
    eItem_Heater,
    eItem_GaussAutoPistol,
    eItem_Blaster,
    eItem_PlasmaMauler,
    eItem_BattleRifle,
    eItem_HeavyLaserRifle,
    eItem_HeavyGaussRifle,
    eItem_HeavyPulseRifle,
    eItem_HeavyPlasmaRifle,
    eItem_LMG,
    eItem_GatlingLaser,
    eItem_GaussMachineGun,
    eItem_GatlingPulser,
    eItem_PlasmaDragon,
    eItem_LaserCarbine,
    eItem_PulseCarbine,
    eItem_ArcRifle,
    eItem_SawedOffShotgun,
    eItem_MAX
};

enum EItemType_Info
{
    eItemInfo_None,
    eItemInfo_MindShield,
    eItemInfo_ChitinPlating,
    eItemInfo_SCOPE,
    eItemInfo_ReaperPack,
    eItemInfo_RespiratorImplant,
    eItemInfo_Grapple,
    eItemInfo_Flight,
    eItemInfo_MecKineticArm,
    eItemInfo_MecFlameThrower,
    eItemInfo_MecGrenadeLauncher,
    eItemInfo_MecRestorativeMist,
    eItemInfo_MecElectroPulse,
    eItemInfo_MecProximityMineLauncher,
    eItemInfo_AlloyJacketedRounds,
    eItemInfo_EnhancedBeamOptics,
    eItemInfo_PlasmaStellerator,
    eItemInfo_LaserSight,
    eItemInfo_CeramicPlating,
    eItemInfo_HiCapMags,
    eItemInfo_BattleComputer,
    eItemInfo_ChameleonSuit,
    eItemInfo_HoloTargeter,
    eItemInfo_SmartshellPods,
    eItemInfo_CoreArmoring,
    eItemInfo_Thumper,
    eItemInfo_ImpactVest,
    eItemInfo_FuelCell,
    eItemInfo_AlloyBipod,
    eItemInfo_BreachingAmmor,
    eItemInfo_ArmorPiercingAmmo,
    eItemInfo_WalkerGear,
    eItemInfo_NeuralGunlink,
    eItemInfo_ShreddeAmmo,
    eItemInfo_PsiScreen,
    eItemInfo_IlluminatorGunsight,
    eItemInfo_IncineratorModule,
    eItemInfo_TargetingModule,
    eItemInfo_ReinforcedArmor,
    eItemInfo_EleriumTurbos,
    eItemInfo_CognitiveEnhancer,
    eItemInfo_Neuroregulator,
    eItemInfo_FlakAmmo,
    eItemInfo_AlloyPlating,
    eItemInfo_DrumMags,
    eItemInfo_45,
    eItemInfo_46,
    eItemInfo_MAX
};

enum EUnitType
{
    UNIT_TYPE_Soldier,
    UNIT_TYPE_Tank,
    UNIT_TYPE_Alien,
    UNIT_TYPE_AlienInUFO,
    UNIT_TYPE_Loot,
    UNIT_TYPE_Animal,
    UNIT_TYPE_Civilian,
    UNIT_TYPE_Player,
    UNIT_TYPE_MPTeamOne,
    UNIT_TYPE_MPTeamTwo,
    UNIT_TYPE_CovertOperative,
    UNIT_TYPE_MAX
};

enum ECountry
{
    eCountry_USA,
    eCountry_Russia,
    eCountry_China,
    eCountry_UK,
    eCountry_Germany,
    eCountry_France,
    eCountry_Japan,
    eCountry_India,
    eCountry_Australia,
    eCountry_Italy,
    eCountry_SouthKorea,
    eCountry_Turkey,
    eCountry_Indonesia,
    eCountry_Spain,
    eCountry_Pakistan,
    eCountry_Canada,
    eCountry_Iran,
    eCountry_Israel,
    eCountry_Egypt,
    eCountry_Brazil,
    eCountry_Argentina,
    eCountry_Mexico,
    eCountry_SouthAfrica,
    eCountry_Poland,
    eCountry_Ukraine,
    eCountry_Nigeria,
    eCountry_Venezuela,
    eCountry_Greece,
    eCountry_Columbia,
    eCountry_Portugal,
    eCountry_Sweden,
    eCountry_Ireland,
    eCountry_Scotland,
    eCountry_Norway,
    eCountry_Netherlands,
    eCountry_Belgium,
    eCountry_Belgium_1,
    eCountry_Belgium_2,
    eCountry_Belgium_3,
    eCountry_Belgium_4,
    eCountry_Belgium_5,
    eCountry_Belgium_6,
    eCountry_Belgium_7,
    eCountry_Belgium_8,
    eCountry_Belgium_9,
    eCountry_Belgium_10,
    eCountry_Belgium_11,
    eCountry_Belgium_12,
    eCountry_Belgium_13,
    eCountry_Belgium_14,
    eCountry_Belgium_15,
    eCountry_Belgium_16,
    eCountry_Belgium_17,
    eCountry_Belgium_18,
    eCountry_Belgium_19,
    eCountry_Belgium_20,
    eCountry_Belgium_21,
    eCountry_Belgium_22,
    eCountry_Belgium_23,
    eCountry_Belgium_24,
    eCountry_Belgium_25,
    eCountry_Belgium_26,
    eCountry_Belgium_27,
    eCountry_Belgium_28,
    eCountry_Belgium_29,
    eCountry_Belgium_30,
    eCountry_Belgium_31,
    eCountry_Belgium_32,
    eCountry_Belgium_33,
    eCountry_Belgium_34,
    eCountry_Belgium_35,
    eCountry_Belgium_36,
    eCountry_Belgium_37,
    eCountry_Belgium_38,
    eCountry_Belgium_39,
    eCountry_Belgium_40,
    eCountry_Belgium_41,
    eCountry_Belgium_42,
    eCountry_Belgium_43,
    eCountry_Belgium_44,
    eCountry_Belgium_45,
    eCountry_Belgium_46,
    eCountry_Belgium_47,
    eCountry_Belgium_48,
    eCountry_Belgium_49,
    eCountry_Belgium_50,
    eCountry_Belgium_51,
    eCountry_Belgium_52,
    eCountry_Belgium_53,
    eCountry_Belgium_54,
    eCountry_Belgium_55,
    eCountry_Belgium_56,
    eCountry_Belgium_57,
    eCountry_Belgium_58,
    eCountry_Belgium_59,
    eCountry_Belgium_60,
    eCountry_Belgium_61,
    eCountry_Belgium_62,
    eCountry_Belgium_63,
    eCountry_Belgium_64,
    eCountry_Belgium_65,
    eCountry_Belgium_66,
    eCountry_Belgium_67,
    eCountry_Belgium_68,
    eCountry_Belgium_69,
    eCountry_Belgium_70,
    eCountry_Belgium_71,
    eCountry_Belgium_72,
    eCountry_Belgium_73,
    eCountry_Belgium_74,
    eCountry_Belgium_75,
    eCountry_Belgium_76,
    eCountry_Belgium_77,
    eCountry_Belgium_78,
    eCountry_Belgium_79,
    eCountry_Belgium_80,
    eCountry_Belgium_81,
    eCountry_Belgium_82,
    eCountry_Belgium_83,
    eCountry_Belgium_84,
    eCountry_Belgium_85,
    eCountry_Belgium_86,
    eCountry_Belgium_87,
    eCountry_Belgium_88,
    eCountry_Belgium_89,
    eCountry_Belgium_90,
    eCountry_Belgium_91,
    eCountry_Belgium_92,
    eCountry_Belgium_93,
    eCountry_Belgium_94,
    eCountry_Belgium_95,
    eCountry_MAX
};

enum ECursorType
{
    eXGCursor_Standard,
    eXGCursor_Rifle,
    eXGCursor_Rocket,
    eXGCursor_Sniper,
    eXGCursor_Laser,
    eXGCursor_Grenade,
    eXGCursor_Plasma,
    eXGCursor_FlameThrower,
    eXGCursor_ArcThrower,
    eXGCursor_Shotgun,
    eXGCursor_TakeCover,
    eXGCursor_Cover,
    eXGCursor_Overwatch,
    eXGCursor_Flush,
    eXGCursor_Medkit,
    eXGCursor_ReloadRocket,
    eXGCursor_None,
    eXGCursor_Total,
    eXGCursor_MAX
};

enum EContinent
{
    eContinent_NorthAmerica,
    eContinent_SouthAmerica,
    eContinent_Europe,
    eContinent_Asia,
    eContinent_Africa,
    eContinent_MAX
};

enum ESalvageType
{
    eSalvage_NONE,
    eSalvage_Food,
    eSalvage_Supplies,
    eSalvage_Alloys,
    eSalvage_Elerium,
    eSalvage_Web,
    eSalvage_Item,
    eSalvage_END,
    eSalvage_MAX
};

enum ECardinalDirection
{
    CardinalDirection_North,
    CardinalDirection_South,
    CardinalDirection_East,
    CardinalDirection_West,
    CardinalDirection_Rand,
    CardinalDirection_MAX
};
enum ECharacter
{
    eChar_None,
    eChar_Civilian,
    eChar_Soldier,
    eChar_Tank,
    eChar_Sectoid,
    eChar_Floater,
    eChar_Thinman,
    eChar_Muton,
    eChar_Cyberdisc,
    eChar_SectoidCommander,
    eChar_FloaterHeavy,
    eChar_MutonElite,
    eChar_Ethereal,
    eChar_Chryssalid,
    eChar_Zombie,
    eChar_MutonBerserker,
    eChar_Sectopod,
    eChar_Drone,
    eChar_Outsider,
    eChar_EtherealUber,
    eChar_BattleScanner,
    eChar_Mechtoid,
    eChar_Mechtoid_Alt,
    eChar_Seeker,
    eChar_ExaltOperative,
    eChar_ExaltSniper,
    eChar_ExaltHeavy,
    eChar_ExaltMedic,
    eChar_ExaltEliteOperative,
    eChar_ExaltEliteSniper,
    eChar_ExaltEliteHeavy,
    eChar_ExaltEliteMedic,
    eChar_MAX_,
    eChar_MAX_16777215,
    eChar_MAX_33554431,
    eChar_MAX_50331647,
    eChar_MAX_67108863,
    eChar_MAX_83886079,
    eChar_MAX_100663295,
    eChar_MAX_117440511,
    eChar_MAX_134217727,
    eChar_MAX_150994943,
    eChar_MAX_167772159,
    eChar_MAX_184549375,
    eChar_MAX_201326591,
    eChar_MAX_218103807,
    eChar_MAX_234881023,
    eChar_MAX_251658239,
    eChar_MAX_268435455,
    eChar_MAX_285212671,
    eChar_MAX_301989887,
    eChar_MAX_318767103,
    eChar_MAX_335544319,
    eChar_MAX_352321535,
    eChar_MAX_369098751,
    eChar_MAX_385875967,
    eChar_MAX_402653183,
    eChar_MAX_419430399,
    eChar_MAX_436207615,
    eChar_MAX_452984831,
    eChar_MAX_469762047,
    eChar_MAX_486539263,
    eChar_MAX_503316479,
    eChar_MAX_520093695,
    eChar_MAX_536870911,
    eChar_MAX_553648127,
    eChar_MAX_570425343,
    eChar_MAX_587202559,
    eChar_MAX_603979775,
    eChar_MAX_620756991,
    eChar_MAX_637534207,
    eChar_MAX_654311423,
    eChar_MAX_671088639,
    eChar_MAX_687865855,
    eChar_MAX_704643071,
    eChar_MAX_721420287,
    eChar_MAX_738197503,
    eChar_MAX_754974719,
    eChar_MAX_771751935,
    eChar_MAX_788529151,
    eChar_MAX_805306367,
    eChar_MAX_822083583,
    eChar_MAX_838860799,
    eChar_MAX_855638015,
    eChar_MAX_872415231,
    eChar_MAX_889192447,
    eChar_MAX_905969663,
    eChar_MAX_922746879,
    eChar_MAX_939524095,
    eChar_MAX_956301311,
    eChar_MAX_973078527,
    eChar_MAX_989855743,
    eChar_MAX_1006632959,
    eChar_MAX_1023410175,
    eChar_MAX_1040187391,
    eChar_MAX_1056964607,
    eChar_MAX_1073741823,
    eChar_MAX_1090519039,
    eChar_MAX_1107296255,
    eChar_MAX_1124073471,
    eChar_MAX_1140850687,
    eChar_MAX_1157627903,
    eChar_MAX_1174405119,
    eChar_MAX_1191182335,
    eChar_MAX_1207959551,
    eChar_MAX_1224736767,
    eChar_MAX_1241513983,
    eChar_MAX_1258291199,
    eChar_MAX_1275068415,
    eChar_MAX_1291845631,
    eChar_MAX_1308622847,
    eChar_MAX_1325400063,
    eChar_MAX_1342177279,
    eChar_MAX_1358954495,
    eChar_MAX_1375731711,
    eChar_MAX_1392508927,
    eChar_MAX_1409286143,
    eChar_MAX_1426063359,
    eChar_MAX_1442840575,
    eChar_MAX_1459617791,
    eChar_MAX_1476395007,
    eChar_MAX_1493172223,
    eChar_MAX_1509949439,
    eChar_MAX_1526726655,
    eChar_MAX_1543503871,
    eChar_MAX_1560281087,
    eChar_MAX_1577058303,
    eChar_MAX_1593835519,
    eChar_MAX_1610612735,
    eChar_MAX_1627389951,
    eChar_MAX_1644167167,
    eChar_MAX_1660944383,
    eChar_MAX_1677721599,
    eChar_MAX_1694498815,
    eChar_MAX_1711276031,
    eChar_MAX_1728053247,
    eChar_MAX_1744830463,
    eChar_MAX_1761607679,
    eChar_MAX_1778384895,
    eChar_MAX_1795162111,
    eChar_MAX_1811939327,
    eChar_MAX_1828716543,
    eChar_MAX_1845493759,
    eChar_MAX_1862270975,
    eChar_MAX_1879048191,
    eChar_MAX_1895825407,
    eChar_MAX_1912602623,
    eChar_MAX_1929379839,
    eChar_MAX_1946157055,
    eChar_MAX_1962934271,
    eChar_MAX_1979711487,
    eChar_MAX_1996488703,
    eChar_MAX_2013265919,
    eChar_MAX_2030043135,
    eChar_MAX_2046820351,
    eChar_MAX_2063597567,
    eChar_MAX_2080374783,
    eChar_MAX_2097151999,
    eChar_MAX_2113929215,
    eChar_MAX_2130706431,
    eChar_MAX_2147483647,
    eChar_MAX_161,
    eChar_MAX_162,
    eChar_MAX_163,
    eChar_MAX_164,
    eChar_MAX_165,
    eChar_MAX_166,
    eChar_MAX_167,
    eChar_MAX_168,
    eChar_MAX_169,
    eChar_MAX_170,
    eChar_MAX_171,
    eChar_MAX_172,
    eChar_MAX_173,
    eChar_MAX_174,
    eChar_MAX_175,
    eChar_MAX_176,
    eChar_MAX_177,
    eChar_MAX_178,
    eChar_MAX_179,
    eChar_MAX_180,
    eChar_MAX_181,
    eChar_MAX_182,
    eChar_MAX_183,
    eChar_MAX_184,
    eChar_MAX_185,
    eChar_MAX_186,
    eChar_MAX_187,
    eChar_MAX_188,
    eChar_MAX_189,
    eChar_MAX_190,
    eChar_MAX_191,
    eChar_MAX_192,
    eChar_MAX_193,
    eChar_MAX_194,
    eChar_MAX_195,
    eChar_MAX_196,
    eChar_MAX_197,
    eChar_MAX_198,
    eChar_MAX_199,
    eChar_MAX_200,
    eChar_MAX_201,
    eChar_MAX_202,
    eChar_MAX_203,
    eChar_MAX_204,
    eChar_MAX_205,
    eChar_MAX_206,
    eChar_MAX_207,
    eChar_MAX_208,
    eChar_MAX_209,
    eChar_MAX_210,
    eChar_MAX_211,
    eChar_MAX_212,
    eChar_MAX_213,
    eChar_MAX_214,
    eChar_MAX_215,
    eChar_MAX_216,
    eChar_MAX_217,
    eChar_MAX_218,
    eChar_MAX_219,
    eChar_MAX_220,
    eChar_MAX_221,
    eChar_MAX_222,
    eChar_MAX_223,
    eChar_MAX_224,
    eChar_MAX_225,
    eChar_MAX
};

enum EPawnType
{
    ePawnType_None,
    ePawnType_HUMAN_START,
    ePawnType_FemaleLevelILight_UNUSED,
    ePawnType_Female_2_Skeleton,
    ePawnType_Female_3_Ghost,
    ePawnType_Female_1_Kevlar,
    ePawnType_Female_2_Carapace,
    ePawnType_Female_3_Titan,
    ePawnType_Female_3_Archangel,
    ePawnType_FemaleLevelIIHeavy_UNUSED,
    ePawnType_FemaleLevelIIIHeavy_UNUSED,
    ePawnType_FemalePsi,
    ePawnType_FemaleCovertOps,
    ePawnType_MaleLevelILight_UNUSED,
    ePawnType_Male_2_Skeleton,
    ePawnType_Male_3_Ghost,
    ePawnType_Male_1_Kevlar,
    ePawnType_Male_2_Carapace,
    ePawnType_Male_3_Titan,
    ePawnType_Male_3_Archangel,
    ePawnType_MaleLevelIIHeavy_UNUSED,
    ePawnType_MaleLevelIIIHeavy_UNUSED,
    ePawnType_MalePsi,
    ePawnType_MaleCovertOps,
    ePawnType_HUMAN_END,
    ePawnType_Tank,
    ePawnType_Tank2,
    ePawnType_Tank3,
    ePawnType_Civilian,
    ePawnType_ALIEN_START,
    ePawnType_Sectoid,
    ePawnType_Sectoid_Commander,
    ePawnType_Floater,
    ePawnType_Floater_Heavy,
    ePawnType_Muton,
    ePawnType_Muton_Elite,
    ePawnType_Muton_Berserker,
    ePawnType_ThinMan,
    ePawnType_Elder,
    ePawnType_CyberDisc,
    ePawnType_Reaper,
    ePawnType_Chryssalid,
    ePawnType_Sectopod,
    ePawnType_SectopodDrone,
    ePawnType_Zombie,
    ePawnType_Outsider,
    ePawnType_EtherealUber,
    ePawnType_ALIEN_END,
    ePawnType_BattleScanner,
    ePawnType_XPACK_ALIEN_START,
    ePawnType_Mechtoid,
    ePawnType_Seeker,
    ePawnType_XPACK_ALIEN_END,
    ePawnType_MEC_START,
    ePawnType_MecCivvies,
    ePawnType_Female_MecCivvies,
    ePawnType_MecMark1,
    ePawnType_MecMark2,
    ePawnType_MecMark3,
    ePawnType_MEC_END,
    ePawnType_EXALT_START,
    ePawnType_ExaltOperative,
    ePawnType_ExaltSniper,
    ePawnType_ExaltHeavy,
    ePawnType_ExaltMedic,
    ePawnType_ExaltEliteOperative,
    ePawnType_ExaltEliteSniper,
    ePawnType_ExaltEliteHeavy,
    ePawnType_ExaltEliteMedic,
    ePawnType_EXALT_END,
    ePawnType_GeneMod_START,
    ePawnType_Female_2_Skeleton_GM,
    ePawnType_Female_3_Ghost_GM,
    ePawnType_Female_1_Kevlar_GM,
    ePawnType_Female_2_Carapace_GM,
    ePawnType_Female_3_Titan_GM,
    ePawnType_Female_3_Archangel_GM,
    ePawnType_FemalePsi_GM,
    ePawnType_Male_2_Skeleton_GM,
    ePawnType_Male_3_Ghost_GM,
    ePawnType_Male_1_Kevlar_GM,
    ePawnType_Male_2_Carapace_GM,
    ePawnType_Male_3_Titan_GM,
    ePawnType_Male_3_Archangel_GM,
    ePawnType_MalePsi_GM,
    ePawnType_GeneMod_END,
    ePawnType_Max
};

enum EMaterialType
{
    MaterialType_Default,
    MaterialType_Wood,
    MaterialType_Grass,
    MaterialType_Dirt,
    MaterialType_Water,
    MaterialType_Metal,
    MaterialType_ShallowWater,
    MaterialType_HumanFlesh,
    MaterialType_AlienFlesh,
    MaterialType_Foliage,
    MaterialType_Masonry,
    MaterialType_Cloth,
    MaterialType_Glass,
    MaterialType_Hay,
    MaterialType_Garbage,
    MaterialType_GroceryProduce,
    MaterialType_GroceryBoxes,
    MaterialType_GroceryCans,
    MaterialType_AsphaltTarRoof,
    MaterialType_WoodAndGlass,
    MaterialType_Mud,
    MaterialType_Plastic,
    MaterialType_MachineHuman,
    MaterialType_MachineAlien,
    MaterialType_Gravel,
    MaterialType_MAX
};

enum ELoadoutTypes
{
    eLoadout_Empty,
    eLoadout_Random,
    eLoadout_HUMAN_BEGIN,
    eLoadout_Pistolier,
    eLoadout_Rifleman,
    eLoadout_LaserRifleman,
    eLoadout_Shotgunner,
    eLoadout_Flamethrower,
    eLoadout_ArcThrower,
    eLoadout_Sniper,
    eLoadout_Sniper_Laser,
    eLoadout_Rocketman,
    eLoadout_Rocketman_Laser,
    eLoadout_Spotter,
    eLoadout_Spotter_Laser,
    eLoadout_Medic,
    eLoadout_Minigunner,
    eLoadout_HeavyLaser,
    eLoadout_ShivMini,
    eLoadout_ShivSentry,
    eLoadout_Shiv2Laser,
    eLoadout_Shiv3Plasma,
    eLoadout_WeaponlessVIP,
    eLoadout_MECMark1,
    eLoadout_MECMark2,
    eLoadout_MECMark3,
    eLoadout_HUMAN_END,
    eLoadout_ALIEN_BEGIN,
    eLoadout_Sectoid,
    eLoadout_Sectoid_Commander,
    eLoadout_Floater,
    eLoadout_Floater_Heavy,
    eLoadout_Chryssalid,
    eLoadout_Chryssalid_Juvenile,
    eLoadout_Sectopod,
    eLoadout_Sectopod_Mini,
    eLoadout_Muton,
    eLoadout_Muton_Berserker,
    eLoadout_Muton_Commander,
    eLoadout_Muton_Elite,
    eLoadout_Cyberdisc,
    eLoadout_ThinMan,
    eLoadout_Elder,
    eLoadout_SectopodDrone,
    eLoadout_Zombie,
    eLoadout_Outsider,
    eLoadout_Muton_LightPlasma,
    eLoadout_EtherealUber,
    eLoadout_Mechtoid,
    eLoadout_Seeker,
    eLoadout_ExaltOperative,
    eLoadout_ExaltSniper,
    eLoadout_ExaltHeavy,
    eLoadout_ExaltMedic,
    eLoadout_ExaltEliteOperative,
    eLoadout_ExaltEliteSniper,
    eLoadout_ExaltEliteHeavy,
    eLoadout_ExaltEliteMedic,
    eLoadout_ALIEN_END,
    eLoadout_Total,
    eLoadout_Invalid,
    eLoadout_MAX
};

enum EArmorClass
{
    eClass_None,
    eClass_Light,
    eClass_Medium,
    eClass_Heavy,
    eClass_Invalid,
    eClass_MAX
};

enum EArmorLevel
{
    eLevel_None,
    eLevel_I,
    eLevel_II,
    eLevel_III,
    eLevel_Invalid,
    eLevel_MAX
};

enum EArmorKit
{
    eKit_None,
    eKit_AssaultRifle_Kevlar,
    eKit_AssaultRifle_Skeleton,
    eKit_AssaultRifle_Carapace,
    eKit_AssaultRifle_Ghost,
    eKit_AssaultRifle_Titan,
    eKit_Shotgun_Kevlar,
    eKit_Shotgun_Skeleton,
    eKit_Shotgun_Carapace,
    eKit_Shotgun_Ghost,
    eKit_Shotgun_Titan,
    eKit_LMG_Kevlar,
    eKit_LMG_Skeleton,
    eKit_LMG_Carapace,
    eKit_LMG_Ghost,
    eKit_LMG_Titan,
    eKit_SniperRifle_Kevlar,
    eKit_SniperRifle_Skeleton,
    eKit_SniperRifle_Carapace,
    eKit_SniperRifle_Ghost,
    eKit_SniperRifle_Titan,
    eKit_LaserAssaultRifle_Kevlar,
    eKit_LaserAssaultRifle_Skeleton,
    eKit_LaserAssaultRifle_Carapace,
    eKit_LaserAssaultRifle_Ghost,
    eKit_LaserAssaultRifle_Titan,
    eKit_HeavyLaser_Kevlar,
    eKit_HeavyLaser_Skeleton,
    eKit_HeavyLaser_Carapace,
    eKit_HeavyLaser_Ghost,
    eKit_HeavyLaser_Titan,
    eKit_LaserSniperRifle_Kevlar,
    eKit_LaserSniperRifle_Skeleton,
    eKit_LaserSniperRifle_Carapace,
    eKit_LaserSniperRifle_Ghost,
    eKit_LaserSniperRifle_Titan,
    eKit_PlasmaLightRifle_Kevlar,
    eKit_PlasmaLightRifle_Skeleton,
    eKit_PlasmaLightRifle_Carapace,
    eKit_PlasmaLightRifle_Ghost,
    eKit_PlasmaLightRifle_Titan,
    eKit_PlasmaAssaultRifle_Kevlar,
    eKit_PlasmaAssaultRifle_Skeleton,
    eKit_PlasmaAssaultRifle_Carapace,
    eKit_PlasmaAssaultRifle_Ghost,
    eKit_PlasmaAssaultRifle_Titan,
    eKit_AlloyCannon_Kevlar,
    eKit_AlloyCannon_Skeleton,
    eKit_AlloyCannon_Carapace,
    eKit_AlloyCannon_Ghost,
    eKit_AlloyCannon_Titan,
    eKit_HeavyPlasma_Kevlar,
    eKit_HeavyPlasma_Skeleton,
    eKit_HeavyPlasma_Carapace,
    eKit_HeavyPlasma_Ghost,
    eKit_HeavyPlasma_Titan,
    eKit_PlasmaSniperRifle_Kevlar,
    eKit_PlasmaSniperRifle_Skeleton,
    eKit_PlasmaSniperRifle_Carapace,
    eKit_PlasmaSniperRifle_Ghost,
    eKit_PlasmaSniperRifle_Titan,
    eKit_LaserAssaultGun_Kevlar,
    eKit_LaserAssaultGun_Skeleton,
    eKit_LaserAssaultGun_Carapace,
    eKit_LaserAssaultGun_Ghost,
    eKit_LaserAssaultGun_Titan,
    eKit_Deco_Kevlar_START,
    eKit_Deco_Kevlar0,
    eKit_Deco_Kevlar1,
    eKit_Deco_Kevlar2,
    eKit_Deco_Kevlar3,
    eKit_Deco_Kevlar4,
    eKit_Deco_Kevlar5,
    eKit_Deco_Kevlar6,
    eKit_Deco_Kevlar7,
    eKit_Deco_Kevlar8,
    eKit_Deco_Kevlar9,
    eKit_Deco_Kevlar10,
    eKit_Deco_Kevlar11,
    eKit_Deco_Kevlar_END,
    eKit_Deco_Skeleton_START,
    eKit_Deco_Skeleton0,
    eKit_Deco_Skeleton1,
    eKit_Deco_Skeleton2,
    eKit_Deco_Skeleton3,
    eKit_Deco_Skeleton4,
    eKit_Deco_Skeleton5,
    eKit_Deco_Skeleton6,
    eKit_Deco_Skeleton7,
    eKit_Deco_Skeleton8,
    eKit_Deco_Skeleton9,
    eKit_Deco_Skeleton10,
    eKit_Deco_Skeleton11,
    eKit_Deco_Skeleton_END,
    eKit_Deco_Carapace_START,
    eKit_Deco_Carapace0,
    eKit_Deco_Carapace1,
    eKit_Deco_Carapace2,
    eKit_Deco_Carapace3,
    eKit_Deco_Carapace4,
    eKit_Deco_Carapace5,
    eKit_Deco_Carapace6,
    eKit_Deco_Carapace7,
    eKit_Deco_Carapace8,
    eKit_Deco_Carapace9,
    eKit_Deco_Carapace10,
    eKit_Deco_Carapace11,
    eKit_Deco_Carapace_END,
    eKit_Deco_Ghost_START,
    eKit_Deco_Ghost0,
    eKit_Deco_Ghost1,
    eKit_Deco_Ghost2,
    eKit_Deco_Ghost3,
    eKit_Deco_Ghost4,
    eKit_Deco_Ghost5,
    eKit_Deco_Ghost6,
    eKit_Deco_Ghost7,
    eKit_Deco_Ghost8,
    eKit_Deco_Ghost9,
    eKit_Deco_Ghost10,
    eKit_Deco_Ghost11,
    eKit_Deco_Ghost_END,
    eKit_Deco_Titan_START,
    eKit_Deco_Titan0,
    eKit_Deco_Titan1,
    eKit_Deco_Titan2,
    eKit_Deco_Titan3,
    eKit_Deco_Titan4,
    eKit_Deco_Titan5,
    eKit_Deco_Titan6,
    eKit_Deco_Titan7,
    eKit_Deco_Titan8,
    eKit_Deco_Titan9,
    eKit_Deco_Titan10,
    eKit_Deco_Titan11,
    eKit_Deco_Titan_END,
    eKit_Deco_Archangel_START,
    eKit_Deco_Archangel0,
    eKit_Deco_Archangel1,
    eKit_Deco_Archangel2,
    eKit_Deco_Archangel3,
    eKit_Deco_Archangel4,
    eKit_Deco_Archangel5,
    eKit_Deco_Archangel6,
    eKit_Deco_Archangel7,
    eKit_Deco_Archangel8,
    eKit_Deco_Archangel9,
    eKit_Deco_Archangel10,
    eKit_Deco_Archangel11,
    eKit_Deco_Archangel_END,
    eKit_Deco_Psi_START,
    eKit_Deco_Psi0,
    eKit_Deco_Psi1,
    eKit_Deco_Psi2,
    eKit_Deco_Psi3,
    eKit_Deco_Psi4,
    eKit_Deco_Psi5,
    eKit_Deco_Psi6,
    eKit_Deco_Psi7,
    eKit_Deco_Psi8,
    eKit_Deco_Psi9,
    eKit_Deco_Psi10,
    eKit_Deco_Psi11,
    eKit_Deco_Psi_END,
    eKit_Deco_Genemod_START,
    eKit_Deco_Genemod0,
    eKit_Deco_Genemod1,
    eKit_Deco_Genemod2,
    eKit_Deco_Genemod3,
    eKit_Deco_Genemod4,
    eKit_Deco_Genemod5,
    eKit_Deco_Genemod6,
    eKit_Deco_Genemod7,
    eKit_Deco_Genemod8,
    eKit_Deco_Genemod9,
    eKit_Deco_Genemod10,
    eKit_Deco_Genemod11,
    eKit_Deco_Genemod_END,
    eKit_MAX
};

enum EDiscState
{
    eDS_None,
    eDS_Good,
    eDS_Ready,
    eDS_Hidden,
    eDS_Bad,
    eDS_Red,
    eDS_ReactionAlien,
    eDS_ReactionHuman,
    eDS_AttackTarget,
    eDS_MAX
};

enum ECharacterSpeech
{
    eCharSpeech_Confirmed,
    eCharSpeech_HunkerDown,
    eCharSpeech_Reload,
    eCharSpeech_Overwatching,
    eCharSpeech_Moving,
    eCharSpeech_Dashing,
    eCharSpeech_JetPackMove,
    eCharSpeech_LowAmmo,
    eCharSpeech_OutOfAmmo,
    eCharSpeech_Suppressing,
    eCharSpeech_AreaSuppressing,
    eCharSpeech_PaintingTarget,
    eCharSpeech_DestroyingCover,
    eCharSpeech_FlushingTarget,
    eCharSpeech_HealingAlly,
    eCharSpeech_StabilizingAlly,
    eCharSpeech_RevivingAlly,
    eCharSpeech_CombatStim,
    eCharSpeech_PrimingGrenade,
    eCharSpeech_FragOut,
    eCharSpeech_SmokeGrenadeThrown,
    eCharSpeech_SpyGrenadeThrown,
    eCharSpeech_FlashbangThrown,
    eCharSpeech_FiringRocket,
    eCharSpeech_GhostModeActivated,
    eCharSpeech_CollateralDamage,
    eCharSpeech_JetPackDeactivated,
    eCharSpeech_ArcThrower,
    eCharSpeech_RepairSHIV,
    eCharSpeech_Kill,
    eCharSpeech_MultiKill,
    eCharSpeech_Missed,
    eCharSpeech_TargetSpotted,
    eCharSpeech_TargetSpottedHidden,
    eCharSpeech_HeardSomething,
    eCharSpeech_TakingFire,
    eCharSpeech_FriendlyKilled,
    eCharSpeech_Panic,
    eCharSpeech_PanickedBreathing,
    eCharSpeech_Wounded,
    eCharSpeech_Died,
    eCharSpeech_Flanked,
    eCharSpeech_Suppressed,
    eCharSpeech_ElectroPulse,
    eCharSpeech_PsiControlled,
    eCharSpeech_Flamethrower,
    eCharSpeech_JetBoots,
    eCharSpeech_KineticStrike,
    eCharSpeech_OneForAll,
    eCharSpeech_MeldSpotted,
    eCharSpeech_MeldCollected,
    eCharSpeech_CivilianRescued,
    eCharSpeech_AlienRetreat,
    eCharSpeech_AlienMoving,
    eCharSpeech_AlienNotStunned,
    eCharSpeech_AlienReinforcements,
    eCharSpeech_AlienSighting,
    eCharSpeech_RunAndGun,
    eCharSpeech_ProximityMine,
    eCharSpeech_PrecisionShot_DEPRECATED,
    eCharSpeech_DisablingShot,
    eCharSpeech_Executioner_DEPRECATED,
    eCharSpeech_DoubleTap_DEPRECATED,
    eCharSpeech_InTheZone_DEPRECATED,
    eCharSpeech_ShredderRocket,
    eCharSpeech_HotPotato_DEPRECATED,
    eCharSpeech_PsionicsMindfray,
    eCharSpeech_PsionicsPanic,
    eCharSpeech_PsionicsInspiration,
    eCharSpeech_PsionicsTelekineticField,
    eCharSpeech_GrapplingHook,
    eCharSpeech_GainingElevation_DEPRECATED,
    eCharSpeech_GenericResponse,
    eCharSpeech_SoldierControlled,
    eCharSpeech_StunnedAlien,
    eCharSpeech_Explosion,
    eCharSpeech_RocketScatter,
    eCharSpeech_PsiRift,
    eCharSpeech_Poisoned,
    eCharSpeech_HiddenMovement,
    eCharSpeech_HiddenMovementVox,
    eCharSpeech_CriticallyWounded_DEPRECATED,
    eCharSpeech_ExaltChatter,
    eCharSpeech_Strangled,
    eCharSpeech_COUNT,
    eCharSpeech_MAX
};

enum ECharacterVoice
{
    eCharVoice_Male_BEGIN,
    eCharVoice_MaleSoldier1,
    eCharVoice_MaleSoldier2,
    eCharVoice_MaleSoldier3,
    eCharVoice_MaleSoldier4,
    eCharVoice_MaleSoldier5,
    eCharVoice_MaleSoldier6,
    eCharVoice_MaleSoldier7,
    eCharVoice_MaleSoldier8,
    eCharVoice_MaleSoldier9,
    eCharVoice_Male_END,
    eCharVoice_Female_BEGIN,
    eCharVoice_FemaleSoldier1,
    eCharVoice_FemaleSoldier2,
    eCharVoice_FemaleSoldier3,
    eCharVoice_FemaleSoldier4,
    eCharVoice_FemaleSoldier5,
    eCharVoice_FemaleSoldier6,
    eCharVoice_Female_END,
    eCharVoice_Brash_Male_BEGIN,
    eCharVoice_MaleSoldier1_Brash,
    eCharVoice_MaleSoldier2_Brash,
    eCharVoice_MaleSoldier3_Brash,
    eCharVoice_MaleSoldier4_Brash,
    eCharVoice_MaleSoldier5_Brash,
    eCharVoice_MaleSoldier6_Brash,
    eCharVoice_MaleSoldier7_Brash,
    eCharVoice_MaleSoldier8_Brash,
    eCharVoice_MaleSoldier9_Brash,
    eCharVoice_Brash_Male_END,
    eCharVoice_Brash_Female_BEGIN,
    eCharVoice_FemaleSoldier1_Brash,
    eCharVoice_FemaleSoldier2_Brash,
    eCharVoice_FemaleSoldier3_Brash,
    eCharVoice_Brash_Female_END,
    eCharVoice_Alien_BEGIN,
    eCharVoice_Sectoid,
    eCharVoice_Sectoid_Commander,
    eCharVoice_Floater,
    eCharVoice_Floater_Heavy,
    eCharVoice_Muton,
    eCharVoice_Muton_Elite,
    eCharVoice_Muton_Berserker,
    eCharVoice_ThinMan,
    eCharVoice_Elder,
    eCharVoice_CyberDisc,
    eCharVoice_Reaper,
    eCharVoice_Chryssalid,
    eCharVoice_Sectopod,
    eCharVoice_SectopodDrone,
    eCharVoice_Zombie,
    eCharVoice_Alien_END,
    eCharVoice_MaleMec_BEGIN,
    eCharVoice_MaleMec1,
    eCharVoice_MaleMec2,
    eCharVoice_MaleMec_END,
    eCharVoice_FemaleMec_BEGIN,
    eCharVoice_FemaleMec1,
    eCharVoice_FemaleMec2,
    eCharVoice_FemaleMec_END,
    eCharVoice_MaleBlueshirt_BEGIN,
    eCharVoice_MaleBlueshirt1,
    eCharVoice_MaleBlueshirt_END,
    eCharVoice_FemaleBlueshirt_BEGIN,
    eCharVoice_FemaleBlueshirt1,
    eCharVoice_FemaleBlueshirt_END,
    eCharVoice_MAX
};

enum ECharacterLanguage
{
    eCharLanguage_English,
    eCharLanguage_French,
    eCharLanguage_German,
    eCharLanguage_Italian,
    eCharLanguage_Polish,
    eCharLanguage_Russian,
    eCharLanguage_Spanish,
    eCharLanguage_Spanish_0,
    eCharLanguage_Spanish_1,
    eCharLanguage_Spanish_2,
    eCharLanguage_Spanish_3,
    eCharLanguage_Spanish_4,
    eCharLanguage_Spanish_5,
    eCharLanguage_Spanish_6,
    eCharLanguage_Spanish_7,
    eCharLanguage_Spanish_8,
    eCharLanguage_Spanish_9,
    eCharLanguage_Spanish_10,
    eCharLanguage_Spanish_11,
    eCharLanguage_Spanish_12,
    eCharLanguage_Spanish_13,
    eCharLanguage_Spanish_14,
    eCharLanguage_Spanish_15,
    eCharLanguage_Spanish_16,
    eCharLanguage_Spanish_17,
    eCharLanguage_Spanish_18,
    eCharLanguage_Spanish_19,
    eCharLanguage_Spanish_20,
    eCharLanguage_Spanish_21,
    eCharLanguage_Spanish_22,
    eCharLanguage_Spanish_23,
    eCharLanguage_Spanish_24,
    eCharLanguage_Spanish_25,
    eCharLanguage_Spanish_26,
    eCharLanguage_Spanish_27,
    eCharLanguage_Spanish_28,
    eCharLanguage_MAX
};

enum ETipTypes
{
    eTip_Tactical,
    eTip_MAX
};

enum EGameplayTips_Tactical
{
    eTTips_Flank,
    eTTips_Height,
    eTTips_Explosives,
    eTTips_OTS,
    eTTips_DashReact,
    eTTips_Medikit,
    eTTips_CriticalWound,
    eTTips_Noise,
    eTTips_Doors,
    eTTips_Pistol,
    eTTips_Pistol_II,
    eTTips_Cover,
    eTTips_Overwatch,
    eTTips_Overwatch_II,
    eTTips_Overwatch_III,
    eTTips_Outdoors,
    eTTips_Medikit_II,
    eTTips_Panic,
    eTTips_HeadDown,
    eTTips_Pistol_III,
    eTTips_EnemyAOE,
    eTTips_ArcThrower,
    eTTips_SHIV,
    eTTips_Flyers,
    eTTips_Melee,
    eTTips_Smoke,
    eTTips_Fire,
    eTTips_Hunker,
    eTTips_SniperRifles,
    eTTips_Suppression,
    eTTips_Health,
    eTTips_HealthII,
    eTTips_Pistol_IV,
    eTTips_MEC_Slow,
    eTTips_Reaper,
    eTTips_Flashbang,
    eTTips_CollateralDamage,
    eTTips_MEC_Health,
    eTTips_MEC_Healing,
    eTTips_CovertGeneMods,
    eTTips_GeneMods_I,
    eTTips_CommHack,
    eTTips_Meld_I,
    eTTips_Meld_II,
    eTTips_Meld_II_1,
    eTTips_Meld_II_2,
    eTTips_Meld_II_3,
    eTTips_Meld_II_4,
    eTTips_Meld_II_5,
    eTTips_Meld_II_6,
    eTTips_Meld_II_7,
    eTTips_Meld_II_8,
    eTTips_Meld_II_9,
    eTTips_Meld_II_10,
    eTTips_Meld_II_11,
    eTTips_Meld_II_12,
    eTTips_Meld_II_13,
    eTTips_Meld_II_14,
    eTTips_Meld_II_15,
    eTTips_Meld_II_16,
    eTTips_Meld_II_17,
    eTTips_Meld_II_18,
    eTTips_Meld_II_19,
    eTTips_MAX
};

enum ETicker_Narratives
{
    eTickerNarrative_UFOShotDown,
    eTickerNarrative_AlienCaptured,
    eTickerNarrative_CodeBroken,
    eTickerNarrative_BaseAssaulted,
    eTickerNarrative_PsiSoldier,
    eTickerNarrative_EXALTRaid,
    eTickerNarrative_MAX
};

enum ETicker_Types
{
    eTicker_Invalid,
    eTicker_Ambient,
    eTicker_Panic,
    eTicker_Mission,
    eTicker_FundingCouncil,
    eTicker_Withdraw,
    eTicker_Narrative,
    eTicker_Exalt,
    eTicker_MAX
};

enum EAlienPodType
{
    ePodType_Soldier,
    ePodType_Commander,
    ePodType_Secondary,
    ePodType_Roaming,
    ePodType_MAX
};

enum EUnitVisibilityInformation
{
    eUVI_UNINITIALIZED,
    eUVI_NotVisibleBEGIN,
    eUVI_NotVisible_Default,
    eUVI_NotVisible_TargetOffBattlefield,
    eUVI_NotVisible_TargetIsGhost,
    eUVI_NotVisibleEND,
    eUVI_VisibleBEGIN,
    eUVI_Visible_SourceDefault_TargetDefault,
    eUVI_VisibleEND,
    eUVI_PropertiesBEGIN,
    eUVI_InBioelectricSkinRange,
    eUVI_TargetOutOfRange,
    eUVI_PropertiesEND,
    eUVI_MAX
};

enum EUnitVisibilityInformation_CoverPoint
{
    eUVICP_CoverPointA,
    eUVICP_CoverPointB,
    eUVICP_CoverPointC,
    eUVICP_CoverPointD,
    eUVICP_MAX
};

enum EMedalType
{
    eMedal_None,
    eMedal_UrbanCombat,
    eMedal_Defender,
    eMedal_InternationalService,
    eMedal_Council,
    eMedal_Terra,
    eMedal_MAX
};

enum EDressUniform
{
    eDressUni_None,
    eDressUni_Male,
    eDressUni_Female,
    eDressUni_MaleMec,
    eDressUni_FemaleMec,
    eDressUni_MAX
};

enum EDressMedal
{
    eDressMedal_None,
    eDressMedal_UrbanCombat_M,
    eDressMedal_Defender_M,
    eDressMedal_InternationalService_M,
    eDressMedal_Council_M,
    eDressMedal_Terra_M,
    eDressMedal_UrbanCombat_F,
    eDressMedal_Defender_F,
    eDressMedal_InternationalService_F,
    eDressMedal_Council_F,
    eDressMedal_Terra_F,
    eDressMedal_MAX
};


struct TAlienPod
{
    var EAlienPodType eType;
    var ECharacter eMain;
    var ECharacter eSupport1;
    var ECharacter eSupport2;
    var EItemType eMainAltWeapon;
    var EItemType eSupport1AltWeapon;
    var EItemType eSupport2AltWeapon;
};

struct TAlienSquad
{
    var array<TAlienPod> arrPods;
    var int iNumDynamicAliens;
};

static function bool isHuman(EPawnType PawnType){}
static function bool IsAlien(EPawnType PawnType){}
static function int CharToCorpse(int iChar){}
static function ECharacter CorpseToChar(int iCorpse){}
static function EItemType CharToCaptive(ECharacter eChar){}
static function bool CharTypeToCinematicCharName(int iChar, out string strCinematicCharName){}
static function string GetClaimedCoverPointColorName(int kIndex){}
static function ECharacter MapPawnToCharacter(EPawnType PawnType){}
static function EPawnType MapCharacterToPawn(ECharacter CharacterType){}
static function bool IsLoadOutShiv(ELoadoutTypes eLoadout){}
static final function bool IsAlienCharacterType(ECharacter eAlienCharacterType){}
static final function bool IsExaltCharacterType(ECharacter eAlienCharacterType){}
static final function bool IsEliteExaltCharacterType(ECharacter eAlienCharacterType){}
static final function int GetProfileStat(EProfileStats eStat){}
static final function SetProfileStat(EProfileStats eStat, int Value){}
static final function IncProfileStat(EProfileStats eStat, int Value){}
static final function bool IsItemUniqueEquip(EItemType eItem){}
static function string TerrainToMap(ETerrainTypes eType){}
static function string FacilityToMap(EFacilityType eType){}
static function array<int> GetPerkContentForAlien(ECharacter AlienChar){}
static final function GetMecUpgradeOptions(const EItemType eExistingArmor, out EItemType eOption1, out EItemType eOption2){}
static final function GetMecEquipOptions(const EItemType eArmor, out EItemType eOption1, out EItemType eOption2){}
static final function EItemType GetConsolidatedMecItem(const EItemType eArmor, const EItemType ePrimaryWeapon, const optional EItemType eSecondaryWeapon, const optional EItemType eTertiaryWeapon){}
static final function EItemType GetMecBaseArmor(const EItemType eArmor){}
static final function bool GetMecArmorAndWeapons(const EItemType eMecSuit, out EItemType eArmor, out EItemType ePrimaryWeapon, out EItemType eSecondaryWeapon, out EItemType eTertiaryWeapon){}
static final function bool DoesMecHaveWeapon(const EItemType eMecSuit, const EItemType eWeapon){}

