/*******************************************************************************
 * XGCameraView_AimingThirdPerson generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2015 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class XGCameraView_AimingThirdPerson extends XGCameraView
    native(Core)
    notplaceable
    hidecategories(Navigation);

var Vector m_vShotTarget;
var Actor m_kShooter;
var XGUnit m_kTargetUnit;
var Vector m_vScroll;
var float m_fY;
var float m_fP;
var float m_fHeightDistance;
var float m_fSideDistance;
var Vector m_vCorrectedLocation;
var float m_fObstructionModifier;
var Vector m_vLoc;
var Vector m_vDir;
var float m_fComputedFOV;
var float m_fComputedAddYaw;
var float m_fComputedAddPitch;
var float m_fComputedAddRoll;
var bool bFirstRun;
var bool bWasEvaluatingStance;
var bool bDebuggingCamera;
var int iCameraIdx;
var int iBestCameraIdx;
var float fBestCameraFactor;
var int iNumCameras;
var float fCurrentObstructionDistance;
var Vector m_vCurrentLocation;
var Vector m_vCurrentDirection;
var XGUnitNativeBase.ECoverState eLastCover;
var XGUnitNativeBase.ECoverState eTargetLastCover;
var int iDebugForceCamera;

simulated event PostBeginPlay(){}
simulated function DoCamera(int iCamIdx){}
function Cam0(){}
function Cam1(){}
function Cam2(){}
function Cam3(){}
function Cam4(){}
function Cam5(){}
function Cam6(){}
function Cam7(){}
function Cam8(){}
function Cam9(){}
function SuperInCloseCam(float fDirModifier){}
simulated function StandardOffsetInCoverDirCam(float fOffsetModifier, bool bReverseCoverDir, float fBackDistance){}
simulated function SetShooter(Actor kShooter){}
simulated function SetTarget(Vector vTarget, optional XGUnit TargetUnit){}
simulated function ResetCamera(bool bKeepBestInfo){}
simulated function bool FreeAiming(){}
simulated function SetIndoorAngle(bool bIndoor){}
simulated function ScrollView(Vector vScroll){}
simulated function Vector GetLookAt(){}
simulated function ComputeHeightDistanceAndPitch(XGUnitNativeBase.ECoverState eCover, Vector ToTargetVector, float fDistToTarget){}
simulated function ComputeSideDistanceAndRoll(XGUnitNativeBase.ECoverState eCover, Vector ToTargetVector){}
simulated function Vector CalcLocation(Rotator rRotation){}
simulated function ApplyCameraSettings(){}
simulated event PostRenderFor(PlayerController kPC, Canvas kCanvas, Vector vCameraPosition, Vector vCameraDir){}
simulated function bool IsCameraObstructed(Vector vLoc, Vector VDir, out float fObstructionDistDiff){}
simulated function DoObstructionCorrection(Vector vLoc, Vector VDir){}
simulated function SetDebugCameraIndex(int Index){}
simulated function float GetSpeedFromCurve(float fDistanceFromDestination){}

defaultproperties
{
    bFirstRun=true
    iBestCameraIdx=-1
    fBestCameraFactor=10000000.0
    iNumCameras=10
    fCurrentObstructionDistance=9999999.0
    iDebugForceCamera=-1
    m_bCanStack=false
    m_bKeepTargetInView=false
    m_bModal=false
    m_fDOFMaxFarBlurAmount=1.0
    m_fDOFFocusInnerRadius=700.0
    m_fFOV=60.0
    m_fDistance=1000.0
    // m_kSpeedCurve=(Points=/* Array type was not detected. */)
}