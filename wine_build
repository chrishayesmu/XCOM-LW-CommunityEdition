#!/usr/bin/env bash

set -Eeuo pipefail

init_wpfx() {
    local udk=${1}
    local udk_srcpath=${2}
    local engine_conf_in=${3}
    local engine_conf_out=${4}
    shift 4

    local d

    env | grep WINE
    rm -rf "${WINEPREFIX}"
    mkdir -p "${WINEPREFIX}"
    wineboot
    WINETRICKS_LATEST_VERSION_CHECK=disabled winetricks --unattended dotnet40
    wine "${udk}" -ProgressOnly
    wineserver -w

    for d in "${udk_srcpath}/"*; do
        mv "${d}" "${d}_sample"
        ln -sT "${d}_sample" "${d}"
    done

    mv -f "${engine_conf_in}" "${engine_conf_out}"
    touch "${engine_conf_out}"
}

lwce_udk() {
    local udk_srcpath=${1}
    local engine_conf_in=${2}
    local engine_conf_out=${3}
    shift 3

    local d sample_config lwce_config

    for d in "${@}"; do
        if [[ -d "${d}" ]]; then
            ln -sft "${udk_srcpath}" "$(realpath --relative-to="${udk_srcpath}" "${d}")"
        else
            echo "Missing package: ${d}" >&2
            exit 1
        fi
    done

    sample_config="$(printf '+EditPackages=%s\\r\\n' 'UTGame' 'UTGameContent')"
    lwce_config="$(printf '+EditPackages=%s\\r\\n' "${@##*/}")"
    sed -z -e "s@${sample_config}@${lwce_config}@g" \
        "${engine_conf_in}" > "${engine_conf_out}"
}

lwce_build() {
    local udk=${1}
    shift

    cd "${udk}/Binaries"
    wine Win32/UDK.com make || echo "ERROR: build failed: $?"
    wineserver -w
}

cmd=${1}
shift

"${cmd}" "${@}"
