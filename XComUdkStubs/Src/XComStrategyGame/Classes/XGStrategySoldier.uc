/*******************************************************************************
 * XGStrategySoldier generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2015 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class XGStrategySoldier extends XGStrategyActorNativeBase
    native
    config(GameData)
    notplaceable
    hidecategories(Navigation);

enum ESoldierStatus
{
    eStatus_Active,
    eStatus_OnMission,
    eStatus_PsiTesting,
    eStatus_CovertOps,
    eStatus_GeneMod,
    eStatus_Augmenting,
    eStatus_Healing,
    eStatus_Dead,
    eStatus_MAX
};

enum ESoldierLocation
{
    eSoldierLoc_Barracks,
    eSoldierLoc_Dropship,
    eSoldierLoc_Infirmary,
    eSoldierLoc_Morgue,
    eSoldierLoc_PsiLabs,
    eSoldierLoc_PsiLabsCinematic,
    eSoldierLoc_Armory,
    eSoldierLoc_Gollup,
    eSoldierLoc_CyberneticsLab,
    eSoldierLoc_GeneticsLab,
    eSoldierLoc_CovertOps,
    eSoldierLoc_Outro,
    eSoldierLoc_MecCinematic,
    eSoldierLoc_GeneModCinematic,
    eSoldierLoc_GeneModNarrative,
    eSoldierLoc_MedalCeremony,
    eSoldierLoc_MAX
};

enum ENameType
{
    eNameType_First,
    eNameType_Last,
    eNameType_Nick,
    eNameType_Full,
    eNameType_Rank,
    eNameType_RankFull,
    eNameType_FullNick,
    eNameType_MAX
};

struct CheckpointRecord
{
    var TCharacter m_kChar;
    var TSoldier m_kSoldier;
    var int m_aStatModifiers[ECharacterStat];
    var ESoldierStatus m_eStatus;
    var int m_iHQLocation;
    var int m_iEnergy;
    var int m_iTurnsOut;
    var int m_iNumMissions;
    var string m_strKIAReport;
    var string m_strKIADate;
    var string m_strCauseOfDeath;
    var bool m_bPsiTested;
    var bool bForcePsiGift;
    var bool m_bMIA;
    var bool m_bAllIn;
    var TInventory m_kBackedUpLoadout;
    var EEasterEggCharacter m_eEasterEggChar;
    var array<EPerkType> m_arrRandomPerks;
    var int m_arrMedals[EMedalType];
    var bool m_bBlueShirt;
};

var TCharacter m_kChar;
var TSoldier m_kSoldier;
var int m_aStatModifiers[ECharacterStat];
var private ESoldierStatus m_eStatus;
var EEasterEggCharacter m_eEasterEggChar;
var private int m_iHQLocation;
var int m_iEnergy;
var int m_iTurnsOut;
var int m_iNumMissions;
var string m_strKIAReport;
var string m_strKIADate;
var string m_strCauseOfDeath;
var bool m_bPsiTested;
var bool bForcePsiGift;
var bool m_bMIA;
var bool m_bAllIn;
var bool m_bBlueShirt;
var bool m_bForcePawnUpdateOnLoadoutChange;
var transient XComUnitPawn m_kPawn;
var TInventory m_kBackedUpLoadout;
var private array<EPerkType> m_arrRandomPerks;
var int m_arrMedals[EMedalType];
var const localized string m_strMessageGainedPsiRank;
var const localized string m_strStatAim;
var const localized string m_strStatDefense;
var const localized string m_strStatHealth;
var const localized string m_strStatWill;
var string m_arrSoldierLocation[ESoldierLocation];
var const localized string m_arrSoldierStatus[ESoldierStatus];
var const localized string m_strSHIVWounded;
var const localized string m_strSHIVDead;
var const localized string m_strHumanWounded;
var const localized string m_strHumanGravelyWounded;
var const localized string m_strHumanDead;