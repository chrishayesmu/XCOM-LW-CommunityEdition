/*******************************************************************************
 * XGExaltSimulation generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2015 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class XGExaltSimulation extends XGStrategyActor
    config(GameData)
    notplaceable
    hidecategories(Navigation);

enum EExaltCellLastVisibilityStatus
{
    eExaltCellLastVisibilityStatus_None,
    eExaltCellLastVisibilityStatus_Revealed,
    eExaltCellLastVisibilityStatus_Hidden,
    eExaltCellLastVisibilityStatus_Removed,
    eExaltCellLastVisibilityStatus_MAX
};

enum EExaltSimulationState
{
    eExaltSimulationState_NotStarted,
    eExaltSimulationState_FirstCellDelay,
    eExaltSimulationState_Active,
    eExaltSimulationState_Finished,
    eExaltSimulationState_MAX
};

enum EExaltCellExposeReason
{
    eExaltCellExposeReason_IntelSweep,
    eExaltCellExposeReason_SabatogeOperation,
    eExaltCellExposeReason_IncreasedPanic,
    eExaltCellExposeReason_ResearchHack,
    eExaltCellExposeReason_MAX
};

struct TExaltCellTuning
{
    var int m_iMinDaysBetweenDifferentCellOperations;
    var int m_iMinDaysBetweenOperations;
    var int m_iMaxDaysBetweenOperations;
    var int m_iMinDaysToHide;
    var int m_iMaxDaysToHide;
    var int m_iMinDaysBetweenCells;
    var int m_iMaxDaysBetweenCells;
    var int m_iMaxSimultaneousCells;
    var int m_iMinSabotageCashAmount;
    var float m_fSabotageCashPercentage;
    var int m_iMinResearchHackDays;
    var float m_fResearchHackPercentage;
};

struct TExaltCellPlacementRollTuning
{
    var float m_fBaseChance;
    var float m_fSatelliteMod;
    var float m_fStealthSatelliteMod;
};

struct TExaltCellPlacementScoreTuning
{
    var float m_fCountryHasLeftXComMod;
    var array<float> m_arrPanicMod;
    var float m_fSatelliteMod;
    var float m_fHomeContinentMod;
    var float m_fContinentHasNoCellsMod;
    var float m_fContinentNoCountriesHaveLeftXComMod;
    var float m_fOnContinentWithOnlyOneCountryLeftInXComMod;
    var float m_fContinentHasLeftXComMod;
    var float m_fOnlyCountryOnContinentWithoutSatelliteMod;
};

struct TExaltTuning
{
    var private const config int m_iExaltStartDelayDays;
    var private const config int m_iExaltStartDelayDaysVariation;
    var private const config int m_iExaltSweepBaseCost;
    var private const config float m_fExaltSweepCostIncrease;
    var private const config int m_iCovertOperationDuration;
    var private const config TExaltCellTuning m_kCellTuning;
    var private const config TExaltCellPlacementRollTuning m_kPlacementRollTuning;
    var private const config TExaltCellPlacementScoreTuning m_kPlacementScoreTuning;
};

struct TExaltClueDefinition
{
    var int m_iClueTextIndex;
    var array<ECountry> m_arrValidCountries;
    var array<ECountry> m_arrInvalidCountries;
};

struct TExaltCellData
{
    var ECountry m_eCountry;
    var int m_iDaysUntilHidden;
    var int m_iDaysUntilNextActivity;
};

struct TExaltCellPlacementScore
{
    var ECountry m_eCountry;
    var float m_fScore;
};

struct TCovertOpsOperative
{
    var XGStrategySoldier m_kCovertOpsSoldier;
    var ECountry m_eInfiltratedCountry;
    var int m_iDaysUntilComplete;
};

struct TExaltCellLastVisibilityStatus
{
    var ECountry m_eCountry;
    var EExaltCellLastVisibilityStatus m_eVisibilityStatus;
};

struct CheckpointRecord
{
    var TExaltTuning m_kTuning;
    var EExaltSimulationState m_eSimulationState;
    var ECountry m_eExaltCountry;
    var array<TExaltClueDefinition> m_arrClues;
    var array<TExaltCellData> m_arrCellData;
    var array<EExaltCellLastVisibilityStatus> m_arrCellLastVisibilityData;
    var int m_kNextDayTimer;
    var int m_iCellPlacementCooldown;
    var int m_iSweepCount;
    var int m_iCellsCleared;
    var int m_iDaysSinceLastOperation;
    var bool m_bHaveDoneCaptureAndHoldMission;
    var bool m_bHaveDoneExtractionMission;
    var TCovertOpsOperative m_kCovertOpsOperative;
    var array<ECountry> m_arrAccusedCountries;
    var bool m_bFirstCellClearedPostCombat;
};

var XGMission m_kDebugForceMission;
var private const config array<config TExaltClueDefinition> m_arrClueDefinitions;
var private const localized array<localized string> m_arrClueText;
var private const config array<config TExaltTuning> m_arrExaltTuning;
var private const localized string m_strCovertInfiltrationDeathReason;
var private TExaltTuning m_kTuning;
var privatewrite EExaltSimulationState m_eSimulationState;
var privatewrite ECountry m_eExaltCountry;
var private array<TExaltClueDefinition> m_arrClues;
var private array<TExaltCellData> m_arrCellData;
var private array<TExaltCellLastVisibilityStatus> m_arrCellLastVisibilityData;
var private int m_kNextDayTimer;
var private int m_iCellPlacementCooldown;
var private int m_iSweepCount;
var privatewrite bool m_bHasTimePassedSinceLastSweep;
var private bool m_bHaveDoneCaptureAndHoldMission;
var private bool m_bHaveDoneExtractionMission;
var privatewrite bool m_bCellClearedPostCombat;
var bool m_bFirstCellClearedPostCombat;
var privatewrite int m_iCellsCleared;
var private int m_iDaysSinceLastOperation;
var private TCovertOpsOperative m_kCovertOpsOperative;
var private array<ECountry> m_arrAccusedCountries;