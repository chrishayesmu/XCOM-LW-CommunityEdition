class Highlander_XGCharacter_Extensions extends Object;

static function XComUnitPawn GetPawnArchetype(XGCharacter kSelf)
{
    local XComUnitPawn kBaseArchetype, kHLArchetype;

    kBaseArchetype = `CONTENTMGR.GetPawnTemplate(kSelf.m_eType);
    kHLArchetype = `WORLDINFO.Spawn(class'Highlander_XComSectoid', kSelf, , , , , true, kSelf.m_eTeam); // TODO make dynamic

    `HL_LOG("-------------------------------------------------------------------");
    `HL_LOG("Highlander_XGCharacter_Extensions: GetPawnArchetype: kSelf = " $ kSelf $ ", kSelf.m_eType = " $ kSelf.m_eType);

    `HL_LOG("");
    `HL_LOG("Highlander_XGCharacter_Extensions: GetPawnArchetype: kBaseArchetype = " $ kBaseArchetype);
    `HL_LOG("Highlander_XGCharacter_Extensions: GetPawnArchetype: kBaseArchetype.GetGameUnit() = " $ kBaseArchetype.GetGameUnit());
    `HL_LOG("Highlander_XGCharacter_Extensions: GetPawnArchetype: kBaseArchetype.Mesh = " $ kBaseArchetype.Mesh);
    `HL_LOG("Highlander_XGCharacter_Extensions: GetPawnArchetype: kBaseArchetype.Mesh.Animations = " $ kBaseArchetype.Mesh.Animations);
    `HL_LOG("Highlander_XGCharacter_Extensions: GetPawnArchetype: kBaseArchetype.MovementNode = " $ kBaseArchetype.MovementNode);
    `HL_LOG("Highlander_XGCharacter_Extensions: GetPawnArchetype: kBaseArchetype.DefaultUnitPawnAnimsets.Length = " $ kBaseArchetype.DefaultUnitPawnAnimsets.Length);

    `HL_LOG("");
    `HL_LOG("Highlander_XGCharacter_Extensions: BEFORE ASSIGNMENT");
    `HL_LOG("Highlander_XGCharacter_Extensions: GetPawnArchetype: kHLArchetype = " $ kHLArchetype);
    `HL_LOG("Highlander_XGCharacter_Extensions: GetPawnArchetype: kHLArchetype.GetGameUnit() = " $ kHLArchetype.GetGameUnit());
    `HL_LOG("Highlander_XGCharacter_Extensions: GetPawnArchetype: kHLArchetype.Mesh = " $ kHLArchetype.Mesh);
    `HL_LOG("Highlander_XGCharacter_Extensions: GetPawnArchetype: kHLArchetype.Mesh.Animations = " $ kHLArchetype.Mesh.Animations);
    `HL_LOG("Highlander_XGCharacter_Extensions: GetPawnArchetype: kHLArchetype.MovementNode = " $ kHLArchetype.MovementNode);
    `HL_LOG("Highlander_XGCharacter_Extensions: GetPawnArchetype: kHLArchetype.DefaultUnitPawnAnimsets.Length = " $ kHLArchetype.DefaultUnitPawnAnimsets.Length);

	kHLArchetype.LocalCameraOffset = kBaseArchetype.LocalCameraOffset;
	kHLArchetype.CameraFocusDistance = kBaseArchetype.CameraFocusDistance;
	kHLArchetype.AimLimit = kBaseArchetype.AimLimit;
	kHLArchetype.AimSpeedFactor = kBaseArchetype.AimSpeedFactor;
	kHLArchetype.AimStopThreshold = kBaseArchetype.AimStopThreshold;
	kHLArchetype.AimSpeedMin = kBaseArchetype.AimSpeedMin;
	kHLArchetype.AimSpeedMax = kBaseArchetype.AimSpeedMax;
	kHLArchetype.AimAtTargetMissPercent = kBaseArchetype.AimAtTargetMissPercent;
	kHLArchetype.TurnSpeedMultiplier = kBaseArchetype.TurnSpeedMultiplier;
	kHLArchetype.m_kUpdateWhenNotRenderedStack = kBaseArchetype.m_kUpdateWhenNotRenderedStack;
	//kHLArchetype.m_kTacticalGame = kBaseArchetype.m_kTacticalGame;
	kHLArchetype.m_kReplicatedCharacterParams = kBaseArchetype.m_kReplicatedCharacterParams;
	kHLArchetype.m_kJetPackNode = kBaseArchetype.m_kJetPackNode;
	kHLArchetype.Footsteps = kBaseArchetype.Footsteps;
	//kHLArchetype.LightEnvironment = kBaseArchetype.LightEnvironment;
	//kHLArchetype.RangeIndicator = kBaseArchetype.RangeIndicator;
	kHLArchetype.CloseAndPersonalRing = kBaseArchetype.CloseAndPersonalRing;
	kHLArchetype.ArcThrowerRing = kBaseArchetype.ArcThrowerRing;
	kHLArchetype.CivilianRescueRing = kBaseArchetype.CivilianRescueRing;
	kHLArchetype.MedikitRing = kBaseArchetype.MedikitRing;
	kHLArchetype.KineticStrikeCard = kBaseArchetype.KineticStrikeCard;
	kHLArchetype.FlamethrowerCard = kBaseArchetype.FlamethrowerCard;
	kHLArchetype.DamageEffectContainer = kBaseArchetype.DamageEffectContainer;
	kHLArchetype.m_bInMatinee = kBaseArchetype.m_bInMatinee;
	kHLArchetype.m_bRemainInAnimControlForDeath = kBaseArchetype.m_bRemainInAnimControlForDeath;
	kHLArchetype.PlayNonFootstepSounds = kBaseArchetype.PlayNonFootstepSounds;
	kHLArchetype.bDoDyingActions = kBaseArchetype.bDoDyingActions;
	kHLArchetype.SmashEnvironmentOnDeath = kBaseArchetype.SmashEnvironmentOnDeath;
	//kHLArchetype.m_bPawnPerkContentInitialized = kBaseArchetype.m_bPawnPerkContentInitialized;
	kHLArchetype.m_bHasFullAnimWeightBones = kBaseArchetype.m_bHasFullAnimWeightBones;
	kHLArchetype.bIsFemale = kBaseArchetype.bIsFemale;
	kHLArchetype.bUseBoneSprings = kBaseArchetype.bUseBoneSprings;
	kHLArchetype.m_bInWater = kBaseArchetype.m_bInWater;
	kHLArchetype.m_bOnlyAllowAnimLeftHandIKNotify = kBaseArchetype.m_bOnlyAllowAnimLeftHandIKNotify;
	kHLArchetype.m_bDropWeaponOnDeath = kBaseArchetype.m_bDropWeaponOnDeath;
	kHLArchetype.m_bAnimOverrideZeroAimOffset = kBaseArchetype.m_bAnimOverrideZeroAimOffset;
	kHLArchetype.m_bTutorialCanDieInMatinee = kBaseArchetype.m_bTutorialCanDieInMatinee;
	kHLArchetype.bAllowPersistentFX = kBaseArchetype.bAllowPersistentFX;
	kHLArchetype.m_bWasIdleBeforeMatinee = kBaseArchetype.m_bWasIdleBeforeMatinee;
	kHLArchetype.m_kLookAtTarget = kBaseArchetype.m_kLookAtTarget;
	kHLArchetype.PhysicsPushScale = kBaseArchetype.PhysicsPushScale;
	//kHLArchetype.RagdollFlag = kBaseArchetype.RagdollFlag;
	kHLArchetype.RagdollBlendTime = kBaseArchetype.RagdollBlendTime;
	kHLArchetype.TempCollisionComponents = kBaseArchetype.TempCollisionComponents;
	kHLArchetype.RagdollFinishTimer = kBaseArchetype.RagdollFinishTimer;
	kHLArchetype.WaitingToBeDestroyedTimer = kBaseArchetype.WaitingToBeDestroyedTimer;
	kHLArchetype.DyingImpulse = kBaseArchetype.DyingImpulse;
	kHLArchetype.DyingHitInfo = kBaseArchetype.DyingHitInfo;
	//kHLArchetype.m_kLastPhysicsState = kBaseArchetype.m_kLastPhysicsState;
	kHLArchetype.DeathHandlerTemplate = kBaseArchetype.DeathHandlerTemplate;
	kHLArchetype.m_deathHandler = kBaseArchetype.m_deathHandler;
	kHLArchetype.m_vTeleportToLocation = kBaseArchetype.m_vTeleportToLocation;
//	kHLArchetype.arrMindMergeSend = kBaseArchetype.arrMindMergeSend;
	//kHLArchetype.MindMergeFX_Send = kBaseArchetype.MindMergeFX_Send;
	//kHLArchetype.MindMergeFX_Receive = kBaseArchetype.MindMergeFX_Receive;
	//kHLArchetype.PsiPanicFX_Receive = kBaseArchetype.PsiPanicFX_Receive;
	//kHLArchetype.MindFrayFX_Receive = kBaseArchetype.MindFrayFX_Receive;
	//kHLArchetype.MindControlFX_Send = kBaseArchetype.MindControlFX_Send;
	//kHLArchetype.MindControlFX_Receive = kBaseArchetype.MindControlFX_Receive;
	//kHLArchetype.PsiInspiredFX_Receive = kBaseArchetype.PsiInspiredFX_Receive;
	//kHLArchetype.DisablingShot_Receive = kBaseArchetype.DisablingShot_Receive;
	kHLArchetype.StunShot_ReceiveTemplate = kBaseArchetype.StunShot_ReceiveTemplate;
	//kHLArchetype.StunShot_Receive = kBaseArchetype.StunShot_Receive;
	//kHLArchetype.TracerBeamedFX = kBaseArchetype.TracerBeamedFX;
	kHLArchetype.TracerBeamedFXTemplate = kBaseArchetype.TracerBeamedFXTemplate;
	//kHLArchetype.PoisonedByChryssalidFX = kBaseArchetype.PoisonedByChryssalidFX;
	kHLArchetype.PoisonedByChryssalidFXTemplate = kBaseArchetype.PoisonedByChryssalidFXTemplate;
	//kHLArchetype.PoisonedByThinmanFX = kBaseArchetype.PoisonedByThinmanFX;
	kHLArchetype.PoisonedByThinmanFXTemplate = kBaseArchetype.PoisonedByThinmanFXTemplate;
	//kHLArchetype.ElectropulsedFX = kBaseArchetype.ElectropulsedFX;
	kHLArchetype.ElectropulsedFXTemplate = kBaseArchetype.ElectropulsedFXTemplate;
	kHLArchetype.GrappleLine = kBaseArchetype.GrappleLine;
	kHLArchetype.UITextures = kBaseArchetype.UITextures;
	kHLArchetype.fPhysicsMotorForce = kBaseArchetype.fPhysicsMotorForce;
	kHLArchetype.LastHeadBoneLocation = kBaseArchetype.LastHeadBoneLocation;
	kHLArchetype.m_fWaterWorldZ = kBaseArchetype.m_fWaterWorldZ;
	kHLArchetype.m_aInWaterParticleSystems = kBaseArchetype.m_aInWaterParticleSystems;
	kHLArchetype.m_kLastWaterVolume = kBaseArchetype.m_kLastWaterVolume;
	kHLArchetype.CloseRangeMissDistance = kBaseArchetype.CloseRangeMissDistance;
	kHLArchetype.NormalMissDistance = kBaseArchetype.NormalMissDistance;
	kHLArchetype.NormalMissAngleMultiplier = kBaseArchetype.NormalMissAngleMultiplier;
	kHLArchetype.CloseRangeMissAngleMultiplier = kBaseArchetype.CloseRangeMissAngleMultiplier;
	kHLArchetype.fHiddenTime = kBaseArchetype.fHiddenTime;
	kHLArchetype.bWeaponIsDown = kBaseArchetype.bWeaponIsDown;
	kHLArchetype.LastLocation_WeaponDownCheck = kBaseArchetype.LastLocation_WeaponDownCheck;
	kHLArchetype.LastRotation_WeaponDownCheck = kBaseArchetype.LastRotation_WeaponDownCheck;
	//kHLArchetype.WeaponStateNode = kBaseArchetype.WeaponStateNode;
	//kHLArchetype.OpenCloseStateNode = kBaseArchetype.OpenCloseStateNode;
	//kHLArchetype.FlyingLegMaskNode = kBaseArchetype.FlyingLegMaskNode;
	//kHLArchetype.MovementNode = kBaseArchetype.MovementNode;
	//kHLArchetype.TurnNode = kBaseArchetype.TurnNode;
	//kHLArchetype.CrouchNode = kBaseArchetype.CrouchNode;
	//kHLArchetype.ActionNode = kBaseArchetype.ActionNode;
	//kHLArchetype.MirrorNode = kBaseArchetype.MirrorNode;
	//kHLArchetype.IdleNode = kBaseArchetype.IdleNode;
	//kHLArchetype.CoverNodes = kBaseArchetype.CoverNodes;
	//kHLArchetype.WeaponDownNodes = kBaseArchetype.WeaponDownNodes;
	//kHLArchetype.SuppressedNodes = kBaseArchetype.SuppressedNodes;
	//kHLArchetype.SpineMaskNodes = kBaseArchetype.SpineMaskNodes;
	kHLArchetype.m_fTurnInitialTargetDirAngle = kBaseArchetype.m_fTurnInitialTargetDirAngle;
	kHLArchetype.m_bTurnFinished = kBaseArchetype.m_bTurnFinished;
	kHLArchetype.bSkipIK = kBaseArchetype.bSkipIK;
	kHLArchetype.bSelfFlankedSystemOK = kBaseArchetype.bSelfFlankedSystemOK;
	kHLArchetype.m_bLeftHandIKEnabled = kBaseArchetype.m_bLeftHandIKEnabled;
	kHLArchetype.m_bLeftHandIKAnimOverrideEnabled = kBaseArchetype.m_bLeftHandIKAnimOverrideEnabled;
	kHLArchetype.m_bLeftHandIKAnimOverrideOn = kBaseArchetype.m_bLeftHandIKAnimOverrideOn;
	kHLArchetype.bLatent_FinishAnimateSwitchCoverSides = kBaseArchetype.bLatent_FinishAnimateSwitchCoverSides;
	kHLArchetype.bUseObstructionShader = kBaseArchetype.bUseObstructionShader;
	kHLArchetype.bAllowFireFromSuppressIdle = kBaseArchetype.bAllowFireFromSuppressIdle;
	kHLArchetype.bAllowOnlyLowCoverAnims = kBaseArchetype.bAllowOnlyLowCoverAnims;
	kHLArchetype.bSkipRotateToward = kBaseArchetype.bSkipRotateToward;
	kHLArchetype.m_bUseRMA = kBaseArchetype.m_bUseRMA;
	kHLArchetype.m_bShouldTurnBeforeMoving = kBaseArchetype.m_bShouldTurnBeforeMoving;
	kHLArchetype.m_bAuxParametersDirty = kBaseArchetype.m_bAuxParametersDirty;
	kHLArchetype.m_bAuxParamNeedsPrimary = kBaseArchetype.m_bAuxParamNeedsPrimary;
	kHLArchetype.m_bAuxParamNeedsSecondary = kBaseArchetype.m_bAuxParamNeedsSecondary;
	kHLArchetype.m_bAuxParamUse3POutline = kBaseArchetype.m_bAuxParamUse3POutline;
	kHLArchetype.m_bAuxAlwaysVisible = kBaseArchetype.m_bAuxAlwaysVisible;
	kHLArchetype.m_bAuxParamNeedsAOEMaterial = kBaseArchetype.m_bAuxParamNeedsAOEMaterial;
	kHLArchetype.m_bNewNeedsAOEMaterial = kBaseArchetype.m_bNewNeedsAOEMaterial;
	kHLArchetype.m_bTexturesBoosted = kBaseArchetype.m_bTexturesBoosted;
	kHLArchetype.m_bWaitingToTurnIntoZombie = kBaseArchetype.m_bWaitingToTurnIntoZombie;
	kHLArchetype.m_fTurnLocInterpAmount = kBaseArchetype.m_fTurnLocInterpAmount;
	kHLArchetype.m_vTurnInitialLocation = kBaseArchetype.m_vTurnInitialLocation;
	kHLArchetype.m_iAimActiveChild = kBaseArchetype.m_iAimActiveChild;
	kHLArchetype.AimingNode = kBaseArchetype.AimingNode;
	kHLArchetype.AimOffset = kBaseArchetype.AimOffset;
	kHLArchetype.StandingAimToggle = kBaseArchetype.StandingAimToggle;
	kHLArchetype.StandingAimOffsetNode = kBaseArchetype.StandingAimOffsetNode;
	kHLArchetype.LowCoverAimOffsetNode = kBaseArchetype.LowCoverAimOffsetNode;
	kHLArchetype.HighCoverAimOffsetNode = kBaseArchetype.HighCoverAimOffsetNode;
	kHLArchetype.CrouchStateNode = kBaseArchetype.CrouchStateNode;
	kHLArchetype.m_ePreDiscHoverState = kBaseArchetype.m_ePreDiscHoverState;
	kHLArchetype.LatentSwitchSidesCoverState = kBaseArchetype.LatentSwitchSidesCoverState;
	kHLArchetype.m_eWeaponState = kBaseArchetype.m_eWeaponState;
	kHLArchetype.m_eLastSelectedExitCoverType = kBaseArchetype.m_eLastSelectedExitCoverType;
	kHLArchetype.m_eOpenCloseState = kBaseArchetype.m_eOpenCloseState;
	kHLArchetype.m_eTimeDilationState = kBaseArchetype.m_eTimeDilationState;
	kHLArchetype.m_eMoveItemToSlot = kBaseArchetype.m_eMoveItemToSlot;
	kHLArchetype.fFootIKTimeLeft = kBaseArchetype.fFootIKTimeLeft;
	kHLArchetype.FootIKInfos = kBaseArchetype.FootIKInfos;
	kHLArchetype.abColCylEnable = kBaseArchetype.abColCylEnable;
	kHLArchetype.LeftHandIK = kBaseArchetype.LeftHandIK;
	kHLArchetype.RightHandIK = kBaseArchetype.RightHandIK;
	kHLArchetype.FocalPoint = kBaseArchetype.FocalPoint;
	kHLArchetype.vMoveDirection = kBaseArchetype.vMoveDirection;
	kHLArchetype.vMoveDestination = kBaseArchetype.vMoveDestination;
	kHLArchetype.LatentTurnTarget = kBaseArchetype.LatentTurnTarget;
	kHLArchetype.fBaseZMeshTranslation = kBaseArchetype.fBaseZMeshTranslation;
	kHLArchetype.arrPawnPerkContent = kBaseArchetype.arrPawnPerkContent;
	kHLArchetype.m_vFireLoc = kBaseArchetype.m_vFireLoc;
	kHLArchetype.m_fTotalDistanceAlongPath = kBaseArchetype.m_fTotalDistanceAlongPath;
	kHLArchetype.m_fDistanceMovedAlongPath = kBaseArchetype.m_fDistanceMovedAlongPath;
	kHLArchetype.m_fDistanceToStopExactly = kBaseArchetype.m_fDistanceToStopExactly;
	kHLArchetype.m_iLastInterval_MoveReactionProcessing = kBaseArchetype.m_iLastInterval_MoveReactionProcessing;
	kHLArchetype.m_StairVolume = kBaseArchetype.m_StairVolume;
	//kHLArchetype.m_kGameUnit = kBaseArchetype.m_kGameUnit;
	kHLArchetype.DefaultUnitPawnAnimsets = kBaseArchetype.DefaultUnitPawnAnimsets;
	kHLArchetype.CustomFlightMovementRifleAnimsets = kBaseArchetype.CustomFlightMovementRifleAnimsets;
	kHLArchetype.CustomFlightMovementPistolAnimsets = kBaseArchetype.CustomFlightMovementPistolAnimsets;
	kHLArchetype.PathingRadius = kBaseArchetype.PathingRadius;
	kHLArchetype.CollisionHeight = kBaseArchetype.CollisionHeight;
	kHLArchetype.CollisionRadius = kBaseArchetype.CollisionRadius;
	kHLArchetype.ThrowGrenadeStartPosition = kBaseArchetype.ThrowGrenadeStartPosition;
	kHLArchetype.ThrowGrenadeStartPositionUnderhand = kBaseArchetype.ThrowGrenadeStartPositionUnderhand;
	kHLArchetype.fStopDistanceNoCover = kBaseArchetype.fStopDistanceNoCover;
	kHLArchetype.fStopDistanceCover = kBaseArchetype.fStopDistanceCover;
	kHLArchetype.m_kOpenCloseStateReplicationData = kBaseArchetype.m_kOpenCloseStateReplicationData;
	kHLArchetype.m_arrParticleEffects = kBaseArchetype.m_arrParticleEffects;
	kHLArchetype.m_WeaponSocketNameToUse = kBaseArchetype.m_WeaponSocketNameToUse;
	kHLArchetype.HiddenSlots = kBaseArchetype.HiddenSlots;
	kHLArchetype.TargetLoc = kBaseArchetype.TargetLoc;
	kHLArchetype.HeadBoneName = kBaseArchetype.HeadBoneName;
	kHLArchetype.FocusFireBlendTime = kBaseArchetype.FocusFireBlendTime;
	kHLArchetype.m_kAuxiliaryMaterial = kBaseArchetype.m_kAuxiliaryMaterial;
	kHLArchetype.m_kAuxiliaryMaterial_ZeroAlpha = kBaseArchetype.m_kAuxiliaryMaterial_ZeroAlpha;
	kHLArchetype.m_DefaultLightingChannels = kBaseArchetype.m_DefaultLightingChannels;
	kHLArchetype.m_kAOEMaterial = kBaseArchetype.m_kAOEMaterial;
	kHLArchetype.m_fPercent = kBaseArchetype.m_fPercent;
	kHLArchetype.m_fVisibilityPercentage = kBaseArchetype.m_fVisibilityPercentage;
	kHLArchetype.m_iTurnsTillVisibilityCheck = kBaseArchetype.m_iTurnsTillVisibilityCheck;
	kHLArchetype.Movement_Stop_Blend = kBaseArchetype.Movement_Stop_Blend;
	kHLArchetype.Into_Idle_Blend = kBaseArchetype.Into_Idle_Blend;
	kHLArchetype.Start_Turn_Blend = kBaseArchetype.Start_Turn_Blend;
	kHLArchetype.Start_Strangle_Blend = kBaseArchetype.Start_Strangle_Blend;
	kHLArchetype.Stop_Strangle_Blend = kBaseArchetype.Stop_Strangle_Blend;
	kHLArchetype.Kill_Strangle_Blend = kBaseArchetype.Kill_Strangle_Blend;
	//kHLArchetype.HumanGlowMaterial = kBaseArchetype.HumanGlowMaterial;
	//kHLArchetype.AlienGlowMaterial = kBaseArchetype.AlienGlowMaterial;
	//kHLArchetype.CivilianGlowMaterial = kBaseArchetype.CivilianGlowMaterial;
	//kHLArchetype.AOEHitMaterial = kBaseArchetype.AOEHitMaterial;
	kHLArchetype.m_kKitMesh = kBaseArchetype.m_kKitMesh;
	kHLArchetype.m_kHeadMeshComponent = kBaseArchetype.m_kHeadMeshComponent;
	kHLArchetype.HairComponent = kBaseArchetype.HairComponent;
	kHLArchetype.m_arrRemovePSCOnDeath = kBaseArchetype.m_arrRemovePSCOnDeath;
	kHLArchetype.m_kMoveItem = kBaseArchetype.m_kMoveItem;
	//kHLArchetype.NearbyFragileDestructibles = kBaseArchetype.NearbyFragileDestructibles;
	kHLArchetype.DamageEvent_CauseOfDeath = kBaseArchetype.DamageEvent_CauseOfDeath;
	kHLArchetype.Mesh = kBaseArchetype.Mesh;
	//kHLArchetype.VfTable_IXComCoverInterface = kBaseArchetype.VfTable_IXComCoverInterface;
	//kHLArchetype.VfTable_IIXComBuildingVisInterface = kBaseArchetype.VfTable_IIXComBuildingVisInterface;
	//kHLArchetype.IndoorInfo = kBaseArchetype.IndoorInfo;
	//kHLArchetype.m_kXGCharacter = kBaseArchetype.m_kXGCharacter;
	//kHLArchetype.bConsiderForCover = kBaseArchetype.bConsiderForCover;
	//kHLArchetype.bLastHitWasHeadShot = kBaseArchetype.bLastHitWasHeadShot;
	//kHLArchetype.bRespondToExplosions = kBaseArchetype.bRespondToExplosions;
	//kHLArchetype.VfTable_IInterface_Speaker = kBaseArchetype.VfTable_IInterface_Speaker;
	//kHLArchetype.MaxStepHeight = kBaseArchetype.MaxStepHeight;
	//kHLArchetype.MaxJumpHeight = kBaseArchetype.MaxJumpHeight;
	//kHLArchetype.WalkableFloorZ = kBaseArchetype.WalkableFloorZ;
	//kHLArchetype.LedgeCheckThreshold = kBaseArchetype.LedgeCheckThreshold;
	//kHLArchetype.PartialLedgeMoveDir = kBaseArchetype.PartialLedgeMoveDir;
	//kHLArchetype.Controller = kBaseArchetype.Controller;
	//kHLArchetype.NextPawn = kBaseArchetype.NextPawn;
    /*
	kHLArchetype.NetRelevancyTime = kBaseArchetype.NetRelevancyTime;
	kHLArchetype.LastRealViewer = kBaseArchetype.LastRealViewer;
	kHLArchetype.LastViewer = kBaseArchetype.LastViewer;
	kHLArchetype.bScriptTickSpecial = kBaseArchetype.bScriptTickSpecial;
	kHLArchetype.bUpAndOut = kBaseArchetype.bUpAndOut;
	kHLArchetype.bIsWalking = kBaseArchetype.bIsWalking;
	kHLArchetype.bWantsToCrouch = kBaseArchetype.bWantsToCrouch;
	//kHLArchetype.bIsCrouched = kBaseArchetype.bIsCrouched;
	//kHLArchetype.bTryToUncrouch = kBaseArchetype.bTryToUncrouch;
	kHLArchetype.bCanCrouch = kBaseArchetype.bCanCrouch;
	kHLArchetype.bCrawler = kBaseArchetype.bCrawler;
	//kHLArchetype.bReducedSpeed = kBaseArchetype.bReducedSpeed;
	kHLArchetype.bJumpCapable = kBaseArchetype.bJumpCapable;
	kHLArchetype.bCanJump = kBaseArchetype.bCanJump;
	kHLArchetype.bCanWalk = kBaseArchetype.bCanWalk;
	kHLArchetype.bCanSwim = kBaseArchetype.bCanSwim;
	kHLArchetype.bCanFly = kBaseArchetype.bCanFly;
	kHLArchetype.bCanClimbLadders = kBaseArchetype.bCanClimbLadders;
	kHLArchetype.bCanStrafe = kBaseArchetype.bCanStrafe;
	kHLArchetype.bAvoidLedges = kBaseArchetype.bAvoidLedges;
	kHLArchetype.bStopAtLedges = kBaseArchetype.bStopAtLedges;
	kHLArchetype.bAllowLedgeOverhang = kBaseArchetype.bAllowLedgeOverhang;
	//kHLArchetype.bPartiallyOverLedge = kBaseArchetype.bPartiallyOverLedge;
	//kHLArchetype.bSimulateGravity = kBaseArchetype.bSimulateGravity;
	kHLArchetype.bIgnoreForces = kBaseArchetype.bIgnoreForces;
	kHLArchetype.bCanWalkOffLedges = kBaseArchetype.bCanWalkOffLedges;
	kHLArchetype.bCanBeBaseForPawns = kBaseArchetype.bCanBeBaseForPawns;
	//kHLArchetype.bSimGravityDisabled = kBaseArchetype.bSimGravityDisabled;
	kHLArchetype.bDirectHitWall = kBaseArchetype.bDirectHitWall;
	//kHLArchetype.bPushesRigidBodies = kBaseArchetype.bPushesRigidBodies;
	kHLArchetype.bForceFloorCheck = kBaseArchetype.bForceFloorCheck;
	kHLArchetype.bForceKeepAnchor = kBaseArchetype.bForceKeepAnchor;
	kHLArchetype.bCanMantle = kBaseArchetype.bCanMantle;
	kHLArchetype.bCanClimbUp = kBaseArchetype.bCanClimbUp;
	kHLArchetype.bDisplayPathErrors = kBaseArchetype.bDisplayPathErrors;
	kHLArchetype.bCanPickupInventory = kBaseArchetype.bCanPickupInventory;
	kHLArchetype.bAmbientCreature = kBaseArchetype.bAmbientCreature;
	kHLArchetype.bLOSHearing = kBaseArchetype.bLOSHearing;
	kHLArchetype.bMuffledHearing = kBaseArchetype.bMuffledHearing;
	kHLArchetype.bDontPossess = kBaseArchetype.bDontPossess;
	kHLArchetype.bRollToDesired = kBaseArchetype.bRollToDesired;
	kHLArchetype.bStationary = kBaseArchetype.bStationary;
	kHLArchetype.bCachedRelevant = kBaseArchetype.bCachedRelevant;
	kHLArchetype.bNoWeaponFiring = kBaseArchetype.bNoWeaponFiring;
	kHLArchetype.bPrevBypassSimulatedClientPhysics = kBaseArchetype.bPrevBypassSimulatedClientPhysics;
	kHLArchetype.bRunPhysicsWithNoController = kBaseArchetype.bRunPhysicsWithNoController;
	kHLArchetype.bForceMaxAccel = kBaseArchetype.bForceMaxAccel;
	kHLArchetype.bLimitFallAccel = kBaseArchetype.bLimitFallAccel;
	kHLArchetype.bReplicateHealthToAll = kBaseArchetype.bReplicateHealthToAll;
	kHLArchetype.bForceRMVelocity = kBaseArchetype.bForceRMVelocity;
	kHLArchetype.bForceRegularVelocity = kBaseArchetype.bForceRegularVelocity;
	kHLArchetype.bPlayedDeath = kBaseArchetype.bPlayedDeath;
	//kHLArchetype.bDesiredRotationSet = kBaseArchetype.bDesiredRotationSet;
	//kHLArchetype.bLockDesiredRotation = kBaseArchetype.bLockDesiredRotation;
	//kHLArchetype.bUnlockWhenReached = kBaseArchetype.bUnlockWhenReached;
	kHLArchetype.bNeedsBaseTickedFirst = kBaseArchetype.bNeedsBaseTickedFirst;
	kHLArchetype.bUsedByMatinee = kBaseArchetype.bUsedByMatinee;
	kHLArchetype.bRootMotionFromInterpCurve = kBaseArchetype.bRootMotionFromInterpCurve;
	kHLArchetype.bDebugShowCameraLocation = kBaseArchetype.bDebugShowCameraLocation;
	kHLArchetype.bFastAttachedMove = kBaseArchetype.bFastAttachedMove;
	kHLArchetype.WalkingPhysics = kBaseArchetype.WalkingPhysics;
	//kHLArchetype.RemoteViewPitch = kBaseArchetype.RemoteViewPitch;
	kHLArchetype.FlashCount = kBaseArchetype.FlashCount;
	kHLArchetype.FiringMode = kBaseArchetype.FiringMode;
	//kHLArchetype.UncrouchTime = kBaseArchetype.UncrouchTime;
	kHLArchetype.CrouchHeight = kBaseArchetype.CrouchHeight;
	kHLArchetype.CrouchRadius = kBaseArchetype.CrouchRadius;
	//kHLArchetype.FullHeight = kBaseArchetype.FullHeight;
	kHLArchetype.DesiredSpeed = kBaseArchetype.DesiredSpeed;
	kHLArchetype.MaxDesiredSpeed = kBaseArchetype.MaxDesiredSpeed;
	kHLArchetype.HearingThreshold = kBaseArchetype.HearingThreshold;
	kHLArchetype.Alertness = kBaseArchetype.Alertness;
	kHLArchetype.SightRadius = kBaseArchetype.SightRadius;
	kHLArchetype.PeripheralVision = kBaseArchetype.PeripheralVision;
	//kHLArchetype.AvgPhysicsTime = kBaseArchetype.AvgPhysicsTime;
	kHLArchetype.Mass = kBaseArchetype.Mass;
	kHLArchetype.Buoyancy = kBaseArchetype.Buoyancy;
	kHLArchetype.MeleeRange = kBaseArchetype.MeleeRange;
	//kHLArchetype.Anchor = kBaseArchetype.Anchor;
	//kHLArchetype.AnchorItem = kBaseArchetype.AnchorItem;
	//kHLArchetype.LastAnchor = kBaseArchetype.LastAnchor;
	kHLArchetype.FindAnchorFailedTime = kBaseArchetype.FindAnchorFailedTime;
	kHLArchetype.LastValidAnchorTime = kBaseArchetype.LastValidAnchorTime;
	kHLArchetype.DestinationOffset = kBaseArchetype.DestinationOffset;
	kHLArchetype.NextPathRadius = kBaseArchetype.NextPathRadius;
	kHLArchetype.SpawnTime = kBaseArchetype.SpawnTime;
	kHLArchetype.MaxPitchLimit = kBaseArchetype.MaxPitchLimit;
	kHLArchetype.GroundSpeed = kBaseArchetype.GroundSpeed;
	kHLArchetype.WaterSpeed = kBaseArchetype.WaterSpeed;
	kHLArchetype.AirSpeed = kBaseArchetype.AirSpeed;
	kHLArchetype.LadderSpeed = kBaseArchetype.LadderSpeed;
	kHLArchetype.AccelRate = kBaseArchetype.AccelRate;
	kHLArchetype.JumpZ = kBaseArchetype.JumpZ;
	kHLArchetype.OutofWaterZ = kBaseArchetype.OutofWaterZ;
	kHLArchetype.MaxOutOfWaterStepHeight = kBaseArchetype.MaxOutOfWaterStepHeight;
	kHLArchetype.AirControl = kBaseArchetype.AirControl;
	kHLArchetype.WalkingPct = kBaseArchetype.WalkingPct;
	kHLArchetype.MovementSpeedModifier = kBaseArchetype.MovementSpeedModifier;
	kHLArchetype.CrouchedPct = kBaseArchetype.CrouchedPct;
	kHLArchetype.MaxFallSpeed = kBaseArchetype.MaxFallSpeed;
	kHLArchetype.AIMaxFallSpeedFactor = kBaseArchetype.AIMaxFallSpeedFactor;
	kHLArchetype.BaseEyeHeight = kBaseArchetype.BaseEyeHeight;
	kHLArchetype.EyeHeight = kBaseArchetype.EyeHeight;
	kHLArchetype.Floor = kBaseArchetype.Floor;
	kHLArchetype.SplashTime = kBaseArchetype.SplashTime;
	kHLArchetype.HeadVolume = kBaseArchetype.HeadVolume;
	kHLArchetype.Health = kBaseArchetype.Health;
	kHLArchetype.HealthMax = kBaseArchetype.HealthMax;
	kHLArchetype.BreathTime = kBaseArchetype.BreathTime;
	kHLArchetype.UnderWaterTime = kBaseArchetype.UnderWaterTime;
	kHLArchetype.LastPainTime = kBaseArchetype.LastPainTime;
	kHLArchetype.KismetDeathDelayTime = kBaseArchetype.KismetDeathDelayTime;
	kHLArchetype.RMVelocity = kBaseArchetype.RMVelocity;
	//kHLArchetype.noise1spot = kBaseArchetype.noise1spot;
	//kHLArchetype.noise1time = kBaseArchetype.noise1time;
	//kHLArchetype.noise1other = kBaseArchetype.noise1other;
	//kHLArchetype.noise1loudness = kBaseArchetype.noise1loudness;
	//kHLArchetype.noise2spot = kBaseArchetype.noise2spot;
	//kHLArchetype.noise2time = kBaseArchetype.noise2time;
	//kHLArchetype.noise2other = kBaseArchetype.noise2other;
	//kHLArchetype.noise2loudness = kBaseArchetype.noise2loudness;
	kHLArchetype.SoundDampening = kBaseArchetype.SoundDampening;
	kHLArchetype.DamageScaling = kBaseArchetype.DamageScaling;
	//kHLArchetype.MenuName = kBaseArchetype.MenuName;
	kHLArchetype.ControllerClass = kBaseArchetype.ControllerClass;
	kHLArchetype.PlayerReplicationInfo = kBaseArchetype.PlayerReplicationInfo;
	kHLArchetype.LandMovementState = kBaseArchetype.LandMovementState;
	kHLArchetype.WaterMovementState = kBaseArchetype.WaterMovementState;
	kHLArchetype.LastStartSpot = kBaseArchetype.LastStartSpot;
	kHLArchetype.LastStartTime = kBaseArchetype.LastStartTime;
	kHLArchetype.TakeHitLocation = kBaseArchetype.TakeHitLocation;
	kHLArchetype.HitDamageType = kBaseArchetype.HitDamageType;
	kHLArchetype.TearOffMomentum = kBaseArchetype.TearOffMomentum;
	//kHLArchetype.CylinderComponent = kBaseArchetype.CylinderComponent;
	kHLArchetype.RBPushRadius = kBaseArchetype.RBPushRadius;
	kHLArchetype.RBPushStrength = kBaseArchetype.RBPushStrength;
	kHLArchetype.AlwaysRelevantDistanceSquared = kBaseArchetype.AlwaysRelevantDistanceSquared;
	kHLArchetype.VehicleCheckRadius = kBaseArchetype.VehicleCheckRadius;
	kHLArchetype.LastHitBy = kBaseArchetype.LastHitBy;
	kHLArchetype.ViewPitchMin = kBaseArchetype.ViewPitchMin;
	kHLArchetype.ViewPitchMax = kBaseArchetype.ViewPitchMax;
	kHLArchetype.AllowedYawError = kBaseArchetype.AllowedYawError;
	//kHLArchetype.DesiredRotation = kBaseArchetype.DesiredRotation;
	kHLArchetype.InventoryManagerClass = kBaseArchetype.InventoryManagerClass;
	kHLArchetype.InvManager = kBaseArchetype.InvManager;
	kHLArchetype.Weapon = kBaseArchetype.Weapon;
	kHLArchetype.FlashLocation = kBaseArchetype.FlashLocation;
	kHLArchetype.LastFiringFlashLocation = kBaseArchetype.LastFiringFlashLocation;
	kHLArchetype.ShotCount = kBaseArchetype.ShotCount;
	kHLArchetype.PreRagdollCollisionComponent = kBaseArchetype.PreRagdollCollisionComponent;
	kHLArchetype.PhysicsPushBody = kBaseArchetype.PhysicsPushBody;
	kHLArchetype.FailedLandingCount = kBaseArchetype.FailedLandingCount;
	kHLArchetype.SlotNodes = kBaseArchetype.SlotNodes;
	kHLArchetype.InterpGroupList = kBaseArchetype.InterpGroupList;
	kHLArchetype.FacialAudioComp = kBaseArchetype.FacialAudioComp;
	kHLArchetype.MIC_PawnMat = kBaseArchetype.MIC_PawnMat;
	kHLArchetype.MIC_PawnHair = kBaseArchetype.MIC_PawnHair;
	kHLArchetype.ScalarParameterInterpArray = kBaseArchetype.ScalarParameterInterpArray;
	kHLArchetype.RootMotionInterpCurve = kBaseArchetype.RootMotionInterpCurve;
	kHLArchetype.RootMotionInterpRate = kBaseArchetype.RootMotionInterpRate;
	kHLArchetype.RootMotionInterpCurrentTime = kBaseArchetype.RootMotionInterpCurrentTime;
	kHLArchetype.RootMotionInterpCurveLastValue = kBaseArchetype.RootMotionInterpCurveLastValue;
 */
    `HL_LOG("");
    `HL_LOG("Highlander_XGCharacter_Extensions: AFTER ASSIGNMENT");
    `HL_LOG("Highlander_XGCharacter_Extensions: GetPawnArchetype: kHLArchetype = " $ kHLArchetype);
    `HL_LOG("Highlander_XGCharacter_Extensions: GetPawnArchetype: kHLArchetype.Mesh = " $ kHLArchetype.Mesh);
    `HL_LOG("Highlander_XGCharacter_Extensions: GetPawnArchetype: kHLArchetype.Mesh.Animations = " $ kHLArchetype.Mesh.Animations);

    //kHLArchetype.RestoreAnimSetsToDefault();
    //kHLArchetype.UpdateAnimations();
    //kHLArchetype.PostInitAnimTree(kHLArchetype.Mesh);

    `HL_LOG("");
    `HL_LOG("Highlander_XGCharacter_Extensions: AFTER METHOD CALLS");
    `HL_LOG("Highlander_XGCharacter_Extensions: GetPawnArchetype: kHLArchetype = " $ kHLArchetype);
    `HL_LOG("Highlander_XGCharacter_Extensions: GetPawnArchetype: kHLArchetype.Mesh = " $ kHLArchetype.Mesh);
    `HL_LOG("Highlander_XGCharacter_Extensions: GetPawnArchetype: kHLArchetype.Mesh.Animations = " $ kHLArchetype.Mesh.Animations);
    `HL_LOG("-------------------------------------------------------------------");

    return kHLArchetype;
}